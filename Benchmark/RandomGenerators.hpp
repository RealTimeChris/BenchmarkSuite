/*
	MIT License

	Copyright (c) 2024 RealTimeChris

	Permission is hereby granted, free of charge, to any person obtaining a copy of this
	software and associated documentation files (the "Software"), to deal in the Software
	without restriction, including without limitation the rights to use, copy, modify, merge,
	publish, distribute, sublicense, and/or sell copies of the Software, and to permit
	persons to whom the Software is furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all copies or
	substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
	PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
	FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
	DEALINGS IN THE SOFTWARE.
*/
/// https://github.com/RealTimeChris/benchmarksuite
/// Feb 3, 2023
#pragma once

#include <BnchSwt/Printable.hpp>
#include <type_traits>
#include <cstddef>
#include <utility>
#include <random>

constexpr jsonifier::string_view unicodeEmoji[]{ { "💯" }, { "🔢" }, { "⚽" }, { "⚽" }, { "🏀" }, { "🏈" }, { "⚾" }, { "🥎" }, { "🎾" }, { "🏐" }, { "🏉" }, { "🥏" }, { "🎱" },
	{ "🪀" }, { "🏓" }, { "🏓" }, { "🏸" }, { "🏒" }, { "🏒" }, { "🏑" }, { "🥍" }, { "🏏" }, { "🏏" }, { "🪃" }, { "🥅" }, { "🥅" }, { "⛳" }, { "⛳" }, { "🪁" }, { "🛝" },
	{ "🏹" }, { "🏹" }, { "🎣" }, { "🎣" }, { "🤿" }, { "🥊" }, { "🥊" }, { "🥋" }, { "🥋" }, { "🎽" }, { "🎽" }, { "🛹" }, { "🛼" }, { "🛷" }, { "⛸️" }, { "🥌" }, { "🎿" },
	{ "🎿" }, { "⛷️" }, { "🏂" }, { "🏂🏻" }, { "🏂🏻" }, { "🏂🏼" }, { "🏂🏼" }, { "🏂🏽" }, { "🏂🏽" }, { "🏂🏾" }, { "🏂🏾" }, { "🏂🏿" }, { "🏂🏿" }, { "🪂" }, { "🏋️" },
	{ "🏋️" }, { "🏋️" }, { "🏋🏻" }, { "🏋🏻" }, { "🏋🏻" }, { "🏋🏼" }, { "🏋🏼" }, { "🏋🏼" }, { "🏋🏽" }, { "🏋🏽" }, { "🏋🏽" }, { "🏋🏾" }, { "🏋🏾" }, { "🏋🏾" }, { "🏋🏿" },
	{ "🏋🏿" }, { "🏋🏿" }, { "🏋️‍♀️" }, { "🏋🏻‍♀️" }, { "🏋🏻‍♀️" }, { "🏋🏼‍♀️" }, { "🏋🏼‍♀️" }, { "🏋🏽‍♀️" },
	{ "🏋🏽‍♀️" }, { "🏋🏾‍♀️" }, { "🏋🏾‍♀️" }, { "🏋🏿‍♀️" }, { "🏋🏿‍♀️" }, { "🏋️‍♂️" }, { "🏋🏻‍♂️" },
	{ "🏋🏻‍♂️" }, { "🏋🏼‍♂️" }, { "🏋🏼‍♂️" }, { "🏋🏽‍♂️" }, { "🏋🏽‍♂️" }, { "🏋🏾‍♂️" }, { "🏋🏾‍♂️" },
	{ "🏋🏿‍♂️" }, { "🏋🏿‍♂️" }, { "🤼" }, { "🤼" }, { "🤼" }, { "🤼‍♀️" }, { "🤼‍♂️" }, { "🤸" }, { "🤸" }, { "🤸🏻" }, { "🤸🏻" },
	{ "🤸🏼" }, { "🤸🏼" }, { "🤸🏽" }, { "🤸🏽" }, { "🤸🏾" }, { "🤸🏾" }, { "🤸🏿" }, { "🤸🏿" }, { "🤸‍♀️" }, { "🤸🏻‍♀️" }, { "🤸🏻‍♀️" },
	{ "🤸🏼‍♀️" }, { "🤸🏼‍♀️" }, { "🤸🏽‍♀️" }, { "🤸🏽‍♀️" }, { "🤸🏾‍♀️" }, { "🤸🏾‍♀️" }, { "🤸🏿‍♀️" },
	{ "🤸🏿‍♀️" }, { "🤸‍♂️" }, { "🤸🏻‍♂️" }, { "🤸🏻‍♂️" }, { "🤸🏼‍♂️" }, { "🤸🏼‍♂️" }, { "🤸🏽‍♂️" },
	{ "🤸🏽‍♂️" }, { "🤸🏾‍♂️" }, { "🤸🏾‍♂️" }, { "🤸🏿‍♂️" }, { "🤸🏿‍♂️" }, { "⛹️" }, { "⛹️" }, { "⛹️" }, { "⛹🏻" }, { "⛹🏻" },
	{ "⛹🏻" }, { "⛹🏼" }, { "⛹🏼" }, { "⛹🏼" }, { "⛹🏽" }, { "⛹🏽" }, { "⛹🏽" }, { "⛹🏾" }, { "⛹🏾" }, { "⛹🏾" }, { "⛹🏿" }, { "⛹🏿" }, { "⛹🏿" }, { "⛹️‍♀️" },
	{ "⛹🏻‍♀️" }, { "⛹🏻‍♀️" }, { "⛹🏼‍♀️" }, { "⛹🏼‍♀️" }, { "⛹🏽‍♀️" }, { "⛹🏽‍♀️" }, { "⛹🏾‍♀️" },
	{ "⛹🏾‍♀️" }, { "⛹🏿‍♀️" }, { "⛹🏿‍♀️" }, { "⛹️‍♂️" }, { "⛹🏻‍♂️" }, { "⛹🏻‍♂️" }, { "⛹🏼‍♂️" },
	{ "⛹🏼‍♂️" }, { "⛹🏽‍♂️" }, { "⛹🏽‍♂️" }, { "⛹🏾‍♂️" }, { "⛹🏾‍♂️" }, { "⛹🏿‍♂️" }, { "⛹🏿‍♂️" },
	{ "🤺" }, { "🤺" }, { "🤺" }, { "🤾" }, { "🤾" }, { "🤾🏻" }, { "🤾🏻" }, { "🤾🏼" }, { "🤾🏼" }, { "🤾🏽" }, { "🤾🏽" }, { "🤾🏾" }, { "🤾🏾" }, { "🤾🏿" }, { "🤾🏿" },
	{ "🤾‍♀️" }, { "🤾🏻‍♀️" }, { "🤾🏻‍♀️" }, { "🤾🏼‍♀️" }, { "🤾🏼‍♀️" }, { "🤾🏽‍♀️" }, { "🤾🏽‍♀️" },
	{ "🤾🏾‍♀️" }, { "🤾🏾‍♀️" }, { "🤾🏿‍♀️" }, { "🤾🏿‍♀️" }, { "🤾‍♂️" }, { "🤾🏻‍♂️" }, { "🤾🏻‍♂️" },
	{ "🤾🏼‍♂️" }, { "🤾🏼‍♂️" }, { "🤾🏽‍♂️" }, { "🤾🏽‍♂️" }, { "🤾🏾‍♂️" }, { "🤾🏾‍♂️" }, { "🤾🏿‍♂️" },
	{ "🤾🏿‍♂️" }, { "🏌️" }, { "🏌️" }, { "🏌🏻" }, { "🏌🏻" }, { "🏌🏼" }, { "🏌🏼" }, { "🏌🏽" }, { "🏌🏽" }, { "🏌🏾" }, { "🏌🏾" }, { "🏌🏿" }, { "🏌🏿" },
	{ "🏌️‍♀️" }, { "🏌🏻‍♀️" }, { "🏌🏻‍♀️" }, { "🏌🏼‍♀️" }, { "🏌🏼‍♀️" }, { "🏌🏽‍♀️" }, { "🏌🏽‍♀️" },
	{ "🏌🏾‍♀️" }, { "🏌🏾‍♀️" }, { "🏌🏿‍♀️" }, { "🏌🏿‍♀️" }, { "🏌️‍♂️" }, { "🏌🏻‍♂️" }, { "🏌🏻‍♂️" },
	{ "🏌🏼‍♂️" }, { "🏌🏼‍♂️" }, { "🏌🏽‍♂️" }, { "🏌🏽‍♂️" }, { "🏌🏾‍♂️" }, { "🏌🏾‍♂️" }, { "🏌🏿‍♂️" },
	{ "🏌🏿‍♂️" }, { "🏇" }, { "🏇🏻" }, { "🏇🏼" }, { "🏇🏽" }, { "🏇🏾" }, { "🏇🏿" }, { "🧘" }, { "🧘🏻" }, { "🧘🏻" }, { "🧘🏼" }, { "🧘🏼" }, { "🧘🏽" }, { "🧘🏽" },
	{ "🧘🏾" }, { "🧘🏾" }, { "🧘🏿" }, { "🧘🏿" }, { "🧘‍♀️" }, { "🧘🏻‍♀️" }, { "🧘🏻‍♀️" }, { "🧘🏼‍♀️" }, { "🧘🏼‍♀️" },
	{ "🧘🏽‍♀️" }, { "🧘🏽‍♀️" }, { "🧘🏾‍♀️" }, { "🧘🏾‍♀️" }, { "🧘🏿‍♀️" }, { "🧘🏿‍♀️" }, { "🧘‍♂️" },
	{ "🧘🏻‍♂️" }, { "🧘🏻‍♂️" }, { "🧘🏼‍♂️" }, { "🧘🏼‍♂️" }, { "🧘🏽‍♂️" }, { "🧘🏽‍♂️" }, { "🧘🏾‍♂️" },
	{ "🧘🏾‍♂️" }, { "🧘🏿‍♂️" }, { "🧘🏿‍♂️" }, { "🏄" }, { "🏄" }, { "🏄🏻" }, { "🏄🏻" }, { "🏄🏼" }, { "🏄🏼" }, { "🏄🏽" }, { "🏄🏽" },
	{ "🏄🏾" }, { "🏄🏾" }, { "🏄🏿" }, { "🏄🏿" }, { "🏄‍♀️" }, { "🏄🏻‍♀️" }, { "🏄🏻‍♀️" }, { "🏄🏼‍♀️" }, { "🏄🏼‍♀️" },
	{ "🏄🏽‍♀️" }, { "🏄🏽‍♀️" }, { "🏄🏾‍♀️" }, { "🏄🏾‍♀️" }, { "🏄🏿‍♀️" }, { "🏄🏿‍♀️" }, { "🏄‍♂️" },
	{ "🏄🏻‍♂️" }, { "🏄🏻‍♂️" }, { "🏄🏼‍♂️" }, { "🏄🏼‍♂️" }, { "🏄🏽‍♂️" }, { "🏄🏽‍♂️" }, { "🏄🏾‍♂️" },
	{ "🏄🏾‍♂️" }, { "🏄🏿‍♂️" }, { "🏄🏿‍♂️" }, { "🏊" }, { "🏊" }, { "🏊🏻" }, { "🏊🏻" }, { "🏊🏼" }, { "🏊🏼" }, { "🏊🏽" }, { "🏊🏽" },
	{ "🏊🏾" }, { "🏊🏾" }, { "🏊🏿" }, { "🏊🏿" }, { "🏊‍♀️" }, { "🏊🏻‍♀️" }, { "🏊🏻‍♀️" }, { "🏊🏼‍♀️" }, { "🏊🏼‍♀️" },
	{ "🏊🏽‍♀️" }, { "🏊🏽‍♀️" }, { "🏊🏾‍♀️" }, { "🏊🏾‍♀️" }, { "🏊🏿‍♀️" }, { "🏊🏿‍♀️" }, { "🏊‍♂️" },
	{ "🏊🏻‍♂️" }, { "🏊🏻‍♂️" }, { "🏊🏼‍♂️" }, { "🏊🏼‍♂️" }, { "🏊🏽‍♂️" }, { "🏊🏽‍♂️" }, { "🏊🏾‍♂️" },
	{ "🏊🏾‍♂️" }, { "🏊🏿‍♂️" }, { "🏊🏿‍♂️" }, { "🤽" }, { "🤽" }, { "🤽🏻" }, { "🤽🏻" }, { "🤽🏼" }, { "🤽🏼" }, { "🤽🏽" }, { "🤽🏽" },
	{ "🤽🏾" }, { "🤽🏾" }, { "🤽🏿" }, { "🤽🏿" }, { "🤽‍♀️" }, { "🤽🏻‍♀️" }, { "🤽🏻‍♀️" }, { "🤽🏼‍♀️" }, { "🤽🏼‍♀️" },
	{ "🤽🏽‍♀️" }, { "🤽🏽‍♀️" }, { "🤽🏾‍♀️" }, { "🤽🏾‍♀️" }, { "🤽🏿‍♀️" }, { "🤽🏿‍♀️" }, { "🤽‍♂️" },
	{ "🤽🏻‍♂️" }, { "🤽🏻‍♂️" }, { "🤽🏼‍♂️" }, { "🤽🏼‍♂️" }, { "🤽🏽‍♂️" }, { "🤽🏽‍♂️" }, { "🤽🏾‍♂️" },
	{ "🤽🏾‍♂️" }, { "🤽🏿‍♂️" }, { "🤽🏿‍♂️" }, { "🚣" }, { "🚣" }, { "🚣🏻" }, { "🚣🏻" }, { "🚣🏼" }, { "🚣🏼" }, { "🚣🏽" }, { "🚣🏽" },
	{ "🚣🏾" }, { "🚣🏾" }, { "🚣🏿" }, { "🚣🏿" }, { "🚣‍♀️" }, { "🚣🏻‍♀️" }, { "🚣🏻‍♀️" }, { "🚣🏼‍♀️" }, { "🚣🏼‍♀️" },
	{ "🚣🏽‍♀️" }, { "🚣🏽‍♀️" }, { "🚣🏾‍♀️" }, { "🚣🏾‍♀️" }, { "🚣🏿‍♀️" }, { "🚣🏿‍♀️" }, { "🚣‍♂️" },
	{ "🚣🏻‍♂️" }, { "🚣🏻‍♂️" }, { "🚣🏼‍♂️" }, { "🚣🏼‍♂️" }, { "🚣🏽‍♂️" }, { "🚣🏽‍♂️" }, { "🚣🏾‍♂️" },
	{ "🚣🏾‍♂️" }, { "🚣🏿‍♂️" }, { "🚣🏿‍♂️" }, { "🧗" }, { "🧗🏻" }, { "🧗🏻" }, { "🧗🏼" }, { "🧗🏼" }, { "🧗🏽" }, { "🧗🏽" }, { "🧗🏾" },
	{ "🧗🏾" }, { "🧗🏿" }, { "🧗🏿" }, { "🧗‍♀️" }, { "🧗🏻‍♀️" }, { "🧗🏻‍♀️" }, { "🧗🏼‍♀️" }, { "🧗🏼‍♀️" },
	{ "🧗🏽‍♀️" }, { "🧗🏽‍♀️" }, { "🧗🏾‍♀️" }, { "🧗🏾‍♀️" }, { "🧗🏿‍♀️" }, { "🧗🏿‍♀️" }, { "🧗‍♂️" },
	{ "🧗🏻‍♂️" }, { "🧗🏻‍♂️" }, { "🧗🏼‍♂️" }, { "🧗🏼‍♂️" }, { "🧗🏽‍♂️" }, { "🧗🏽‍♂️" }, { "🧗🏾‍♂️" },
	{ "🧗🏾‍♂️" }, { "🧗🏿‍♂️" }, { "🧗🏿‍♂️" }, { "🚵" }, { "🚵" }, { "🚵🏻" }, { "🚵🏻" }, { "🚵🏼" }, { "🚵🏼" }, { "🚵🏽" }, { "🚵🏽" },
	{ "🚵🏾" }, { "🚵🏾" }, { "🚵🏿" }, { "🚵🏿" }, { "🚵‍♀️" }, { "🚵🏻‍♀️" }, { "🚵🏻‍♀️" }, { "🚵🏼‍♀️" }, { "🚵🏼‍♀️" },
	{ "🚵🏽‍♀️" }, { "🚵🏽‍♀️" }, { "🚵🏾‍♀️" }, { "🚵🏾‍♀️" }, { "🚵🏿‍♀️" }, { "🚵🏿‍♀️" }, { "🚵‍♂️" },
	{ "🚵🏻‍♂️" }, { "🚵🏻‍♂️" }, { "🚵🏼‍♂️" }, { "🚵🏼‍♂️" }, { "🚵🏽‍♂️" }, { "🚵🏽‍♂️" }, { "🚵🏾‍♂️" },
	{ "🚵🏾‍♂️" }, { "🚵🏿‍♂️" }, { "🚵🏿‍♂️" }, { "🚴" }, { "🚴" }, { "🚴🏻" }, { "🚴🏻" }, { "🚴🏼" }, { "🚴🏼" }, { "🚴🏽" }, { "🚴🏽" },
	{ "🚴🏾" }, { "🚴🏾" }, { "🚴🏿" }, { "🚴🏿" }, { "🚴‍♀️" }, { "🚴🏻‍♀️" }, { "🚴🏻‍♀️" }, { "🚴🏼‍♀️" }, { "🚴🏼‍♀️" },
	{ "🚴🏽‍♀️" }, { "🚴🏽‍♀️" }, { "🚴🏾‍♀️" }, { "🚴🏾‍♀️" }, { "🚴🏿‍♀️" }, { "🚴🏿‍♀️" }, { "🚴‍♂️" },
	{ "🚴🏻‍♂️" }, { "🚴🏻‍♂️" }, { "🚴🏼‍♂️" }, { "🚴🏼‍♂️" }, { "🚴🏽‍♂️" }, { "🚴🏽‍♂️" }, { "🚴🏾‍♂️" },
	{ "🚴🏾‍♂️" }, { "🚴🏿‍♂️" }, { "🚴🏿‍♂️" }, { "🏆" }, { "🥇" }, { "🥇" }, { "🥈" }, { "🥈" }, { "🥉" }, { "🥉" }, { "🏅" }, { "🏅" }, { "🎖️" },
	{ "🏵️" }, { "🎗️" }, { "🎫" }, { "🎟️" }, { "🎟️" }, { "🎪" }, { "🤹" }, { "🤹" }, { "🤹" }, { "🤹🏻" }, { "🤹🏻" }, { "🤹🏻" }, { "🤹🏼" }, { "🤹🏼" }, { "🤹🏼" }, { "🤹🏽" },
	{ "🤹🏽" }, { "🤹🏽" }, { "🤹🏾" }, { "🤹🏾" }, { "🤹🏾" }, { "🤹🏿" }, { "🤹🏿" }, { "🤹🏿" }, { "🤹‍♀️" }, { "🤹🏻‍♀️" }, { "🤹🏻‍♀️" },
	{ "🤹🏼‍♀️" }, { "🤹🏼‍♀️" }, { "🤹🏽‍♀️" }, { "🤹🏽‍♀️" }, { "🤹🏾‍♀️" }, { "🤹🏾‍♀️" }, { "🤹🏿‍♀️" },
	{ "🤹🏿‍♀️" }, { "🤹‍♂️" }, { "🤹🏻‍♂️" }, { "🤹🏻‍♂️" }, { "🤹🏼‍♂️" }, { "🤹🏼‍♂️" }, { "🤹🏽‍♂️" },
	{ "🤹🏽‍♂️" }, { "🤹🏾‍♂️" }, { "🤹🏾‍♂️" }, { "🤹🏿‍♂️" }, { "🤹🏿‍♂️" }, { "🎭" }, { "🩰" }, { "🎨" }, { "🎬" }, { "🎬" },
	{ "🎤" }, { "🎧" }, { "🎧" }, { "🎼" }, { "🎹" }, { "🪇" }, { "🥁" }, { "🥁" }, { "🪘" }, { "🎷" }, { "🎺" }, { "🪗" }, { "🎸" }, { "🪕" }, { "🎻" }, { "🪈" }, { "🎲" },
	{ "♟️" }, { "🎯" }, { "🎯" }, { "🎳" }, { "🎮" }, { "🎰" }, { "🧩" }, { "🧩" }, { "🏳️" }, { "🏴" }, { "🏴‍☠️" }, { "🏁" }, { "🚩" }, { "🏳️‍🌈" },
	{ "🏳️‍🌈" }, { "🏳️‍⚧️" }, { "🇺🇳" }, { "🇦🇫" }, { "🇦🇽" }, { "🇦🇱" }, { "🇩🇿" }, { "🇦🇸" }, { "🇦🇩" }, { "🇦🇴" }, { "🇦🇮" }, { "🇦🇶" }, { "🇦🇬" }, { "🇦🇷" }, { "🇦🇲" },
	{ "🇦🇼" }, { "🇦🇺" }, { "🇦🇹" }, { "🇦🇿" }, { "🇧🇸" }, { "🇧🇭" }, { "🇧🇩" }, { "🇧🇧" }, { "🇧🇾" }, { "🇧🇪" }, { "🇧🇿" }, { "🇧🇯" }, { "🇧🇲" }, { "🇧🇹" }, { "🇧🇴" }, { "🇧🇦" }, { "🇧🇼" },
	{ "🇧🇷" }, { "🇮🇴" }, { "🇻🇬" }, { "🇧🇳" }, { "🇧🇬" }, { "🇧🇫" }, { "🇧🇮" }, { "🇰🇭" }, { "🇨🇲" }, { "🇨🇦" }, { "🇮🇨" }, { "🇨🇻" }, { "🇧🇶" }, { "🇰🇾" }, { "🇨🇫" }, { "🇹🇩" }, { "🇨🇱" },
	{ "🇨🇳" }, { "🇨🇽" }, { "🇨🇨" }, { "🇨🇴" }, { "🇰🇲" }, { "🇨🇬" }, { "🇨🇩" }, { "🇨🇰" }, { "🇨🇷" }, { "🇨🇮" }, { "🇭🇷" }, { "🇨🇺" }, { "🇨🇼" }, { "🇨🇾" }, { "🇨🇿" }, { "🇩🇰" }, { "🇩🇯" },
	{ "🇩🇲" }, { "🇩🇴" }, { "🇪🇨" }, { "🇪🇬" }, { "🇸🇻" }, { "🇬🇶" }, { "🇪🇷" }, { "🇪🇪" }, { "🇪🇹" }, { "🇪🇺" }, { "🇫🇰" }, { "🇫🇴" }, { "🇫🇯" }, { "🇫🇮" }, { "🇫🇷" }, { "🇬🇫" }, { "🇵🇫" },
	{ "🇹🇫" }, { "🇬🇦" }, { "🇬🇲" }, { "🇬🇪" }, { "🇩🇪" }, { "🇬🇭" }, { "🇬🇮" }, { "🇬🇷" }, { "🇬🇱" }, { "🇬🇩" }, { "🇬🇵" }, { "🇬🇺" }, { "🇬🇹" }, { "🇬🇬" }, { "🇬🇳" }, { "🇬🇼" }, { "🇬🇾" },
	{ "🇭🇹" }, { "🇭🇳" }, { "🇭🇰" }, { "🇭🇺" }, { "🇮🇸" }, { "🇮🇳" }, { "🇮🇩" }, { "🇮🇷" }, { "🇮🇶" }, { "🇮🇪" }, { "🇮🇲" }, { "🇮🇱" }, { "🇮🇹" }, { "🇯🇲" }, { "🇯🇵" }, { "🎌" }, { "🇯🇪" },
	{ "🇯🇴" }, { "🇰🇿" }, { "🇰🇪" }, { "🇰🇮" }, { "🇽🇰" }, { "🇰🇼" }, { "🇰🇬" }, { "🇱🇦" }, { "🇱🇻" }, { "🇱🇧" }, { "🇱🇸" }, { "🇱🇷" }, { "🇱🇾" }, { "🇱🇮" }, { "🇱🇹" }, { "🇱🇺" }, { "🇲🇴" },
	{ "🇲🇰" }, { "🇲🇬" }, { "🇲🇼" }, { "🇲🇾" }, { "🇲🇻" }, { "🇲🇱" }, { "🇲🇹" }, { "🇲🇭" }, { "🇲🇶" }, { "🇲🇷" }, { "🇲🇺" }, { "🇾🇹" }, { "🇲🇽" }, { "🇫🇲" }, { "🇲🇩" }, { "🇲🇨" }, { "🇲🇳" },
	{ "🇲🇪" }, { "🇲🇸" }, { "🇲🇦" }, { "🇲🇿" }, { "🇲🇲" }, { "🇳🇦" }, { "🇳🇷" }, { "🇳🇵" }, { "🇳🇱" }, { "🇳🇨" }, { "🇳🇿" }, { "🇳🇮" }, { "🇳🇪" }, { "🇳🇬" }, { "🇳🇺" }, { "🇳🇫" }, { "🇰🇵" },
	{ "🇲🇵" }, { "🇳🇴" }, { "🇴🇲" }, { "🇵🇰" }, { "🇵🇼" }, { "🇵🇸" }, { "🇵🇦" }, { "🇵🇬" }, { "🇵🇾" }, { "🇵🇪" }, { "🇵🇭" }, { "🇵🇳" }, { "🇵🇱" }, { "🇵🇹" }, { "🇵🇷" }, { "🇶🇦" }, { "🇷🇪" },
	{ "🇷🇴" }, { "🇷🇺" }, { "🇷🇼" }, { "🇼🇸" }, { "🇸🇲" }, { "🇸🇹" }, { "🇸🇦" }, { "🇸🇳" }, { "🇷🇸" }, { "🇸🇨" }, { "🇸🇱" }, { "🇸🇬" }, { "🇸🇽" }, { "🇸🇰" }, { "🇸🇮" }, { "🇬🇸" }, { "🇸🇧" },
	{ "🇸🇴" }, { "🇿🇦" }, { "🇰🇷" }, { "🇸🇸" }, { "🇪🇸" }, { "🇱🇰" }, { "🇧🇱" }, { "🇸🇭" }, { "🇰🇳" }, { "🇱🇨" }, { "🇵🇲" }, { "🇻🇨" }, { "🇸🇩" }, { "🇸🇷" }, { "🇸🇿" }, { "🇸🇪" }, { "🇨🇭" },
	{ "🇸🇾" }, { "🇹🇼" }, { "🇹🇯" }, { "🇹🇿" }, { "🇹🇭" }, { "🇹🇱" }, { "🇹🇬" }, { "🇹🇰" }, { "🇹🇴" }, { "🇹🇹" }, { "🇹🇳" }, { "🇹🇷" }, { "🇹🇲" }, { "🇹🇨" }, { "🇻🇮" }, { "🇹🇻" }, { "🇺🇬" },
	{ "🇺🇦" }, { "🇦🇪" }, { "🇬🇧" }, { "🏴󠁧󠁢󠁥󠁮󠁧󠁿" }, { "🏴󠁧󠁢󠁳󠁣󠁴󠁿" }, { "🏴󠁧󠁢󠁷󠁬󠁳󠁿" }, { "🇺🇸" }, { "🇺🇾" }, { "🇺🇿" },
	{ "🇻🇺" }, { "🇻🇦" }, { "🇻🇪" }, { "🇻🇳" }, { "🇼🇫" }, { "🇪🇭" }, { "🇾🇪" }, { "🇿🇲" }, { "🇿🇼" }, { "🇦🇨" }, { "🇧🇻" }, { "🇨🇵" }, { "🇪🇦" }, { "🇩🇬" }, { "🇭🇲" }, { "🇲🇫" }, { "🇸🇯" },
	{ "🇹🇦" }, { "🇺🇲" }, { "🍏" }, { "🍎" }, { "🍎" }, { "🍐" }, { "🍊" }, { "🍋" }, { "🍌" }, { "🍉" }, { "🍇" }, { "🍓" }, { "🫐" }, { "🍈" }, { "🍒" }, { "🍑" }, { "🥭" },
	{ "🍍" }, { "🥥" }, { "🥝" }, { "🥝" }, { "🥝" }, { "🍅" }, { "🍆" }, { "🥑" }, { "🫛" }, { "🥦" }, { "🥬" }, { "🥒" }, { "🌶️" }, { "🫑" }, { "🌽" }, { "🌽" }, { "🥕" },
	{ "🫒" }, { "🧄" }, { "🧅" }, { "🥔" }, { "🍠" }, { "🫚" }, { "🥐" }, { "🥯" }, { "🍞" }, { "🥖" }, { "🥖" }, { "🥨" }, { "🧀" }, { "🧀" }, { "🥚" }, { "🍳" }, { "🧈" },
	{ "🥞" }, { "🧇" }, { "🥓" }, { "🥩" }, { "🍗" }, { "🍖" }, { "🦴" }, { "🌭" }, { "🌭" }, { "🍔" }, { "🍟" }, { "🍟" }, { "🍕" }, { "🫓" }, { "🥪" }, { "🥙" }, { "🥙" },
	{ "🧆" }, { "🌮" }, { "🌯" }, { "🫔" }, { "🥗" }, { "🥗" }, { "🥘" }, { "🥘" }, { "🫕" }, { "🥫" }, { "🫙" }, { "🍝" }, { "🍜" }, { "🍜" }, { "🍲" }, { "🍲" }, { "🍛" },
	{ "🍛" }, { "🍣" }, { "🍱" }, { "🍱" }, { "🥟" }, { "🦪" }, { "🍤" }, { "🍙" }, { "🍚" }, { "🍚" }, { "🍘" }, { "🍥" }, { "🥠" }, { "🥮" }, { "🍢" }, { "🍡" }, { "🍧" },
	{ "🍨" }, { "🍦" }, { "🥧" }, { "🧁" }, { "🍰" }, { "🍰" }, { "🎂" }, { "🎂" }, { "🍮" }, { "🍮" }, { "🍮" }, { "🍭" }, { "🍬" }, { "🍫" }, { "🍿" }, { "🍩" }, { "🍪" },
	{ "🌰" }, { "🥜" }, { "🥜" }, { "🫘" }, { "🍯" }, { "🥛" }, { "🥛" }, { "🫗" }, { "🍼" }, { "🫖" }, { "☕" }, { "☕" }, { "🍵" }, { "🧉" }, { "🧃" }, { "🥤" }, { "🧋" },
	{ "🍶" }, { "🍺" }, { "🍺" }, { "🍻" }, { "🥂" }, { "🥂" }, { "🍷" }, { "🥃" }, { "🥃" }, { "🍸" }, { "🍹" }, { "🍾" }, { "🍾" }, { "🧊" }, { "🥄" }, { "🍴" }, { "🍽️" },
	{ "🍽️" }, { "🥣" }, { "🥡" }, { "🥢" }, { "🧂" }, { "🐶" }, { "🐶" }, { "🐱" }, { "🐱" }, { "🐭" }, { "🐭" }, { "🐹" }, { "🐰" }, { "🐰" }, { "🦊" }, { "🦊" }, { "🐻" },
	{ "🐼" }, { "🐼" }, { "🐻‍❄️" }, { "🐨" }, { "🐯" }, { "🐯" }, { "🦁" }, { "🦁" }, { "🐮" }, { "🐮" }, { "🐷" }, { "🐷" }, { "🐽" }, { "🐸" }, { "🐵" }, { "🙈" },
	{ "🙉" }, { "🙊" }, { "🐒" }, { "🐔" }, { "🐧" }, { "🐦" }, { "🐤" }, { "🐣" }, { "🐥" }, { "🪿" }, { "🦆" }, { "🐦‍⬛" }, { "🦅" }, { "🦉" }, { "🦇" }, { "🐺" },
	{ "🐗" }, { "🐴" }, { "🐴" }, { "🦄" }, { "🦄" }, { "🫎" }, { "🐝" }, { "🐝" }, { "🪱" }, { "🐛" }, { "🦋" }, { "🐌" }, { "🐞" }, { "🐜" }, { "🪰" }, { "🪲" }, { "🪳" },
	{ "🦟" }, { "🦗" }, { "🕷️" }, { "🕸️" }, { "🦂" }, { "🐢" }, { "🐍" }, { "🦎" }, { "🦖" }, { "🦕" }, { "🐙" }, { "🦑" }, { "🪼" }, { "🦐" }, { "🦞" }, { "🦀" }, { "🐡" },
	{ "🐠" }, { "🐟" }, { "🐬" }, { "🐳" }, { "🐋" }, { "🦈" }, { "🦭" }, { "🐊" }, { "🐅" }, { "🐆" }, { "🦓" }, { "🦍" }, { "🦧" }, { "🦣" }, { "🐘" }, { "🦛" }, { "🦏" },
	{ "🦏" }, { "🐪" }, { "🐫" }, { "🦒" }, { "🦘" }, { "🦬" }, { "🐃" }, { "🐂" }, { "🐄" }, { "🫏" }, { "🐎" }, { "🐖" }, { "🐏" }, { "🐑" }, { "🐑" }, { "🦙" }, { "🐐" },
	{ "🦌" }, { "🐕" }, { "🐩" }, { "🦮" }, { "🐕‍🦺" }, { "🐈" }, { "🐈‍⬛" }, { "🪶" }, { "🪽" }, { "🐓" }, { "🦃" }, { "🦤" }, { "🦚" }, { "🦜" }, { "🦢" }, { "🦩" },
	{ "🕊️" }, { "🕊️" }, { "🐇" }, { "🦝" }, { "🦨" }, { "🦡" }, { "🦫" }, { "🦦" }, { "🦥" }, { "🐁" }, { "🐀" }, { "🐿️" }, { "🦔" }, { "🐾" }, { "🐾" }, { "🐉" }, { "🐲" },
	{ "🌵" }, { "🎄" }, { "🌲" }, { "🌳" }, { "🌴" }, { "🪵" }, { "🌱" }, { "🌿" }, { "☘️" }, { "🍀" }, { "🎍" }, { "🪴" }, { "🎋" }, { "🍃" }, { "🍂" }, { "🍁" }, { "🪺" },
	{ "🪹" }, { "🍄" }, { "🐚" }, { "🐚" }, { "🪸" }, { "🪨" }, { "🌾" }, { "🌾" }, { "💐" }, { "🌷" }, { "🌹" }, { "🥀" }, { "🥀" }, { "🪻" }, { "🪷" }, { "🌺" }, { "🌸" },
	{ "🌼" }, { "🌻" }, { "🌞" }, { "🌝" }, { "🌛" }, { "🌜" }, { "🌚" }, { "🌚" }, { "🌕" }, { "🌖" }, { "🌗" }, { "🌘" }, { "🌑" }, { "🌒" }, { "🌓" }, { "🌔" }, { "🌙" },
	{ "🌎" }, { "🌍" }, { "🌏" }, { "🪐" }, { "💫" }, { "⭐" }, { "🌟" }, { "🌟" }, { "✨" }, { "⚡" }, { "⚡" }, { "☄️" }, { "💥" }, { "💥" }, { "🔥" }, { "🔥" }, { "🌪️" },
	{ "🌪️" }, { "🌪️" }, { "🌈" }, { "☀️" }, { "☀️" }, { "🌤️" }, { "🌤️" }, { "⛅" }, { "🌥️" }, { "🌥️" }, { "☁️" }, { "🌦️" }, { "🌦️" }, { "🌧️" }, { "🌧️" }, { "⛈️" }, { "⛈️" }, { "🌩️" },
	{ "🌩️" }, { "🌨️" }, { "🌨️" }, { "❄️" }, { "☃️" }, { "⛄" }, { "🌬️" }, { "🌬️" }, { "💨" }, { "💨" }, { "💧" }, { "💦" }, { "🫧" }, { "☔" }, { "☂️" }, { "🌊" }, { "🌊" }, { "🌫️" },
	{ "⌚" }, { "📱" }, { "📱" }, { "📲" }, { "💻" }, { "⌨️" }, { "🖥️" }, { "🖥️" }, { "🖨️" }, { "🖱️" }, { "🖱️" }, { "🖲️" }, { "🕹️" }, { "🗜️" }, { "🗜️" }, { "💽" }, { "💽" },
	{ "💾" }, { "💿" }, { "💿" }, { "📀" }, { "📼" }, { "📼" }, { "📷" }, { "📸" }, { "📹" }, { "🎥" }, { "📽️" }, { "📽️" }, { "🎞️" }, { "📞" }, { "☎️" }, { "📟" }, { "📠" },
	{ "📠" }, { "📺" }, { "📺" }, { "📻" }, { "🎙️" }, { "🎙️" }, { "🎚️" }, { "🎛️" }, { "🧭" }, { "⏱️" }, { "⏲️" }, { "⏲️" }, { "⏰" }, { "🕰️" }, { "🕰️" }, { "⌛" }, { "⏳" }, { "📡" },
	{ "🔋" }, { "🪫" }, { "🔌" }, { "💡" }, { "💡" }, { "🔦" }, { "🕯️" }, { "🪔" }, { "🧯" }, { "🛢️" }, { "🛢️" }, { "💸" }, { "💵" }, { "💴" }, { "💴" }, { "💶" }, { "💶" },
	{ "💷" }, { "🪙" }, { "💰" }, { "💰" }, { "💳" }, { "🪪" }, { "💎" }, { "💎" }, { "⚖️" }, { "⚖️" }, { "🪜" }, { "🧰" }, { "🪛" }, { "🔧" }, { "🔨" }, { "⚒️" }, { "⚒️" }, { "🛠️" },
	{ "🛠️" }, { "⛏️" }, { "🪚" }, { "🔩" }, { "⚙️" }, { "🪤" }, { "🧱" }, { "🧱" }, { "⛓️" }, { "🧲" }, { "🔫" }, { "🔫" }, { "💣" }, { "🧨" }, { "🪓" }, { "🔪" }, { "🔪" }, { "🗡️" },
	{ "🗡️" }, { "⚔️" }, { "🛡️" }, { "🚬" }, { "🚬" }, { "⚰️" }, { "🪦" }, { "⚱️" }, { "⚱️" }, { "🏺" }, { "🔮" }, { "📿" }, { "🧿" }, { "🪬" }, { "💈" }, { "💈" }, { "⚗️" }, { "🔭" },
	{ "🔬" }, { "🕳️" }, { "🩻" }, { "🩹" }, { "🩺" }, { "💊" }, { "💉" }, { "🩸" }, { "🧬" }, { "🦠" }, { "🧫" }, { "🧪" }, { "🌡️" }, { "🧹" }, { "🪠" }, { "🧺" }, { "🧻" },
	{ "🚽" }, { "🚰" }, { "🚿" }, { "🛁" }, { "🛀" }, { "🛀🏻" }, { "🛀🏼" }, { "🛀🏽" }, { "🛀🏾" }, { "🛀🏿" }, { "🧼" }, { "🪥" }, { "🪒" }, { "🪮" }, { "🧽" }, { "🪣" },
	{ "🧴" }, { "🧴" }, { "🛎️" }, { "🛎️" }, { "🔑" }, { "🗝️" }, { "🗝️" }, { "🚪" }, { "🪑" }, { "🛋️" }, { "🛋️" }, { "🛏️" }, { "🛌" }, { "🛌" }, { "🛌🏻" }, { "🛌🏻" }, { "🛌🏼" },
	{ "🛌🏼" }, { "🛌🏽" }, { "🛌🏽" }, { "🛌🏾" }, { "🛌🏾" }, { "🛌🏿" }, { "🛌🏿" }, { "🧸" }, { "🪆" }, { "🖼️" }, { "🖼️" }, { "🪞" }, { "🪟" }, { "🛍️" }, { "🛒" }, { "🛒" },
	{ "🎁" }, { "🎁" }, { "🎈" }, { "🎏" }, { "🎏" }, { "🎀" }, { "🪄" }, { "🪅" }, { "🎊" }, { "🎉" }, { "🎉" }, { "🎎" }, { "🪭" }, { "🏮" }, { "🎐" }, { "🪩" }, { "🧧" },
	{ "✉️" }, { "📩" }, { "📨" }, { "📧" }, { "📧" }, { "💌" }, { "📥" }, { "📤" }, { "📦" }, { "🏷️" }, { "🪧" }, { "📪" }, { "📫" }, { "📬" }, { "📭" }, { "📮" }, { "📯" },
	{ "📜" }, { "📃" }, { "📄" }, { "📑" }, { "🧾" }, { "📊" }, { "📈" }, { "📉" }, { "🗒️" }, { "🗒️" }, { "🗓️" }, { "🗓️" }, { "📆" }, { "📅" }, { "🗑️" }, { "📇" }, { "🗃️" },
	{ "🗃️" }, { "🗳️" }, { "🗳️" }, { "🗄️" }, { "📋" }, { "📁" }, { "📂" }, { "🗂️" }, { "🗂️" }, { "🗞️" }, { "🗞️" }, { "📰" }, { "📓" }, { "📔" }, { "📒" }, { "📕" }, { "📗" },
	{ "📘" }, { "📙" }, { "📚" }, { "📖" }, { "📖" }, { "🔖" }, { "🧷" }, { "🔗" }, { "📎" }, { "🖇️" }, { "🖇️" }, { "📐" }, { "📏" }, { "🧮" }, { "📌" }, { "📍" }, { "✂️" },
	{ "🖊️" }, { "🖊️" }, { "🖊️" }, { "🖋️" }, { "🖋️" }, { "🖋️" }, { "✒️" }, { "🖌️" }, { "🖌️" }, { "🖍️" }, { "🖍️" }, { "📝" }, { "📝" }, { "✏️" }, { "🔍" }, { "🔎" }, { "🔏" },
	{ "🔐" }, { "🔒" }, { "🔒" }, { "🔓" }, { "🔓" }, { "😀" }, { "😀" }, { "😃" }, { "😄" }, { "😁" }, { "😆" }, { "😆" }, { "🥹" }, { "😅" }, { "😂" }, { "🤣" }, { "🤣" },
	{ "🥲" }, { "☺️" }, { "☺️" }, { "😊" }, { "😇" }, { "🙂" }, { "🙂" }, { "🙃" }, { "🙃" }, { "😉" }, { "😉" }, { "😌" }, { "😌" }, { "😍" }, { "🥰" }, { "😘" }, { "😗" },
	{ "😗" }, { "😙" }, { "😚" }, { "😋" }, { "😛" }, { "😝" }, { "😜" }, { "🤪" }, { "🤨" }, { "🧐" }, { "🤓" }, { "🤓" }, { "😎" }, { "🥸" }, { "🤩" }, { "🥳" }, { "😏" },
	{ "😏" }, { "😒" }, { "😒" }, { "😞" }, { "😔" }, { "😔" }, { "😟" }, { "😟" }, { "😕" }, { "😕" }, { "🙁" }, { "🙁" }, { "☹️" }, { "☹️" }, { "☹️" }, { "😣" }, { "😖" }, { "😫" },
	{ "😩" }, { "😩" }, { "🥺" }, { "😢" }, { "😢" }, { "😭" }, { "😤" }, { "😠" }, { "😠" }, { "😡" }, { "😡" }, { "🤬" }, { "🤯" }, { "😳" }, { "😳" }, { "🥵" }, { "🥶" },
	{ "😶‍🌫️" }, { "😱" }, { "😨" }, { "😨" }, { "😰" }, { "😥" }, { "😓" }, { "🤗" }, { "🤗" }, { "🤔" }, { "🤔" }, { "🫣" }, { "🤭" }, { "🫢" }, { "🫡" }, { "🤫" },
	{ "🫠" }, { "🤥" }, { "🤥" }, { "😶" }, { "🫥" }, { "😐" }, { "🫤" }, { "😑" }, { "🫨" }, { "😬" }, { "🙄" }, { "🙄" }, { "😯" }, { "😯" }, { "😦" }, { "😧" }, { "😮" },
	{ "😲" }, { "🥱" }, { "😴" }, { "😴" }, { "🤤" }, { "🤤" }, { "😪" }, { "😪" }, { "😮‍💨" }, { "😵" }, { "😵‍💫" }, { "🤐" }, { "🤐" }, { "🥴" }, { "🤢" },
	{ "🤢" }, { "🤮" }, { "🤧" }, { "🤧" }, { "😷" }, { "🤒" }, { "🤒" }, { "🤕" }, { "🤕" }, { "🤑" }, { "🤑" }, { "🤠" }, { "🤠" }, { "😈" }, { "👿" }, { "👹" }, { "👹" },
	{ "👺" }, { "👺" }, { "🤡" }, { "🤡" }, { "💩" }, { "💩" }, { "💩" }, { "💩" }, { "💩" }, { "👻" }, { "💀" }, { "💀" }, { "☠️" }, { "☠️" }, { "👽" }, { "👾" }, { "👾" },
	{ "🤖" }, { "🤖" }, { "🎃" }, { "😺" }, { "😺" }, { "😸" }, { "😹" }, { "😻" }, { "😼" }, { "😽" }, { "🙀" }, { "🙀" }, { "😿" }, { "😿" }, { "😾" }, { "🫶" }, { "🫶🏻" },
	{ "🫶🏻" }, { "🫶🏼" }, { "🫶🏼" }, { "🫶🏽" }, { "🫶🏽" }, { "🫶🏾" }, { "🫶🏾" }, { "🫶🏿" }, { "🫶🏿" }, { "🤲" }, { "🤲🏻" }, { "🤲🏻" }, { "🤲🏼" }, { "🤲🏼" },
	{ "🤲🏽" }, { "🤲🏽" }, { "🤲🏾" }, { "🤲🏾" }, { "🤲🏿" }, { "🤲🏿" }, { "👐" }, { "👐🏻" }, { "👐🏼" }, { "👐🏽" }, { "👐🏾" }, { "👐🏿" }, { "🙌" }, { "🙌" }, { "🙌🏻" },
	{ "🙌🏼" }, { "🙌🏽" }, { "🙌🏾" }, { "🙌🏿" }, { "👏" }, { "👏🏻" }, { "👏🏼" }, { "👏🏽" }, { "👏🏾" }, { "👏🏿" }, { "🤝" }, { "🤝" }, { "🤝🏻" }, { "🤝🏻" },
	{ "🫱🏻‍🫲🏼" }, { "🫱🏻‍🫲🏼" }, { "🫱🏻‍🫲🏽" }, { "🫱🏻‍🫲🏽" }, { "🫱🏻‍🫲🏾" }, { "🫱🏻‍🫲🏾" },
	{ "🫱🏻‍🫲🏿" }, { "🫱🏻‍🫲🏿" }, { "🫱🏼‍🫲🏻" }, { "🫱🏼‍🫲🏻" }, { "🤝🏼" }, { "🤝🏼" }, { "🫱🏼‍🫲🏽" },
	{ "🫱🏼‍🫲🏽" }, { "🫱🏼‍🫲🏾" }, { "🫱🏼‍🫲🏾" }, { "🫱🏼‍🫲🏿" }, { "🫱🏼‍🫲🏿" }, { "🫱🏽‍🫲🏻" },
	{ "🫱🏽‍🫲🏻" }, { "🫱🏽‍🫲🏼" }, { "🫱🏽‍🫲🏼" }, { "🤝🏽" }, { "🤝🏽" }, { "🫱🏽‍🫲🏾" }, { "🫱🏽‍🫲🏾" },
	{ "🫱🏽‍🫲🏿" }, { "🫱🏽‍🫲🏿" }, { "🫱🏾‍🫲🏻" }, { "🫱🏾‍🫲🏻" }, { "🫱🏾‍🫲🏼" }, { "🫱🏾‍🫲🏼" },
	{ "🫱🏾‍🫲🏽" }, { "🫱🏾‍🫲🏽" }, { "🤝🏾" }, { "🤝🏾" }, { "🫱🏾‍🫲🏿" }, { "🫱🏾‍🫲🏿" }, { "🫱🏿‍🫲🏻" },
	{ "🫱🏿‍🫲🏻" }, { "🫱🏿‍🫲🏼" }, { "🫱🏿‍🫲🏼" }, { "🫱🏿‍🫲🏽" }, { "🫱🏿‍🫲🏽" }, { "🫱🏿‍🫲🏾" },
	{ "🫱🏿‍🫲🏾" }, { "🤝🏿" }, { "🤝🏿" }, { "👍" }, { "👍" }, { "👍" }, { "👍" }, { "👍🏻" }, { "👍🏻" }, { "👍🏻" }, { "👍🏼" }, { "👍🏼" }, { "👍🏼" }, { "👍🏽" },
	{ "👍🏽" }, { "👍🏽" }, { "👍🏾" }, { "👍🏾" }, { "👍🏾" }, { "👍🏿" }, { "👍🏿" }, { "👍🏿" }, { "👎" }, { "👎" }, { "👎" }, { "👎" }, { "👎🏻" }, { "👎🏻" }, { "👎🏻" },
	{ "👎🏼" }, { "👎🏼" }, { "👎🏼" }, { "👎🏽" }, { "👎🏽" }, { "👎🏽" }, { "👎🏾" }, { "👎🏾" }, { "👎🏾" }, { "👎🏿" }, { "👎🏿" }, { "👎🏿" }, { "👊" }, { "👊" }, { "👊🏻" },
	{ "👊🏼" }, { "👊🏽" }, { "👊🏾" }, { "👊🏿" }, { "✊" }, { "✊" }, { "✊🏻" }, { "✊🏼" }, { "✊🏽" }, { "✊🏾" }, { "✊🏿" }, { "🤛" }, { "🤛" }, { "🤛🏻" }, { "🤛🏻" },
	{ "🤛🏼" }, { "🤛🏼" }, { "🤛🏽" }, { "🤛🏽" }, { "🤛🏾" }, { "🤛🏾" }, { "🤛🏿" }, { "🤛🏿" }, { "🤜" }, { "🤜" }, { "🤜🏻" }, { "🤜🏻" }, { "🤜🏼" }, { "🤜🏼" }, { "🤜🏽" },
	{ "🤜🏽" }, { "🤜🏾" }, { "🤜🏾" }, { "🤜🏿" }, { "🤜🏿" }, { "🫷" }, { "🫷🏻" }, { "🫷🏻" }, { "🫷🏼" }, { "🫷🏼" }, { "🫷🏽" }, { "🫷🏽" }, { "🫷🏾" }, { "🫷🏾" },
	{ "🫷🏿" }, { "🫷🏿" }, { "🫸" }, { "🫸🏻" }, { "🫸🏻" }, { "🫸🏼" }, { "🫸🏼" }, { "🫸🏽" }, { "🫸🏽" }, { "🫸🏾" }, { "🫸🏾" }, { "🫸🏿" }, { "🫸🏿" }, { "🤞" }, { "🤞" },
	{ "🤞🏻" }, { "🤞🏻" }, { "🤞🏼" }, { "🤞🏼" }, { "🤞🏽" }, { "🤞🏽" }, { "🤞🏾" }, { "🤞🏾" }, { "🤞🏿" }, { "🤞🏿" }, { "✌️" }, { "✌️" }, { "✌🏻" }, { "✌🏼" }, { "✌🏽" },
	{ "✌🏾" }, { "✌🏿" }, { "🫰" }, { "🫰🏻" }, { "🫰🏻" }, { "🫰🏼" }, { "🫰🏼" }, { "🫰🏽" }, { "🫰🏽" }, { "🫰🏾" }, { "🫰🏾" }, { "🫰🏿" }, { "🫰🏿" }, { "🤟" }, { "🤟🏻" },
	{ "🤟🏻" }, { "🤟🏼" }, { "🤟🏼" }, { "🤟🏽" }, { "🤟🏽" }, { "🤟🏾" }, { "🤟🏾" }, { "🤟🏿" }, { "🤟🏿" }, { "🤘" }, { "🤘" }, { "🤘🏻" }, { "🤘🏻" }, { "🤘🏼" }, { "🤘🏼" },
	{ "🤘🏽" }, { "🤘🏽" }, { "🤘🏾" }, { "🤘🏾" }, { "🤘🏿" }, { "🤘🏿" }, { "👌" }, { "👌🏻" }, { "👌🏼" }, { "👌🏽" }, { "👌🏾" }, { "👌🏿" }, { "🤌" }, { "🤌🏼" }, { "🤌🏼" },
	{ "🤌🏻" }, { "🤌🏻" }, { "🤌🏽" }, { "🤌🏽" }, { "🤌🏾" }, { "🤌🏾" }, { "🤌🏿" }, { "🤌🏿" }, { "🤏" }, { "🤏🏻" }, { "🤏🏻" }, { "🤏🏼" }, { "🤏🏼" }, { "🤏🏽" },
	{ "🤏🏽" }, { "🤏🏾" }, { "🤏🏾" }, { "🤏🏿" }, { "🤏🏿" }, { "🫳" }, { "🫳🏻" }, { "🫳🏻" }, { "🫳🏼" }, { "🫳🏼" }, { "🫳🏽" }, { "🫳🏽" }, { "🫳🏾" }, { "🫳🏾" },
	{ "🫳🏿" }, { "🫳🏿" }, { "🫴" }, { "🫴🏻" }, { "🫴🏻" }, { "🫴🏼" }, { "🫴🏼" }, { "🫴🏽" }, { "🫴🏽" }, { "🫴🏾" }, { "🫴🏾" }, { "🫴🏿" }, { "🫴🏿" }, { "👈" }, { "👈🏻" },
	{ "👈🏼" }, { "👈🏽" }, { "👈🏾" }, { "👈🏿" }, { "👉" }, { "👉🏻" }, { "👉🏼" }, { "👉🏽" }, { "👉🏾" }, { "👉🏿" }, { "👆" }, { "👆🏻" }, { "👆🏼" }, { "👆🏽" }, { "👆🏾" },
	{ "👆🏿" }, { "👇" }, { "👇🏻" }, { "👇🏼" }, { "👇🏽" }, { "👇🏾" }, { "👇🏿" }, { "☝️" }, { "☝🏻" }, { "☝🏼" }, { "☝🏽" }, { "☝🏾" }, { "☝🏿" }, { "✋" }, { "✋🏻" },
	{ "✋🏼" }, { "✋🏽" }, { "✋🏾" }, { "✋🏿" }, { "🤚" }, { "🤚" }, { "🤚🏻" }, { "🤚🏻" }, { "🤚🏼" }, { "🤚🏼" }, { "🤚🏽" }, { "🤚🏽" }, { "🤚🏾" }, { "🤚🏾" }, { "🤚🏿" },
	{ "🤚🏿" }, { "🖐️" }, { "🖐️" }, { "🖐🏻" }, { "🖐🏻" }, { "🖐🏼" }, { "🖐🏼" }, { "🖐🏽" }, { "🖐🏽" }, { "🖐🏾" }, { "🖐🏾" }, { "🖐🏿" }, { "🖐🏿" }, { "🖖" }, { "🖖" },
	{ "🖖" }, { "🖖🏻" }, { "🖖🏻" }, { "🖖🏼" }, { "🖖🏼" }, { "🖖🏽" }, { "🖖🏽" }, { "🖖🏾" }, { "🖖🏾" }, { "🖖🏿" }, { "🖖🏿" }, { "👋" }, { "👋" }, { "👋🏻" }, { "👋🏼" },
	{ "👋🏽" }, { "👋🏾" }, { "👋🏿" }, { "🤙" }, { "🤙" }, { "🤙🏻" }, { "🤙🏻" }, { "🤙🏼" }, { "🤙🏼" }, { "🤙🏽" }, { "🤙🏽" }, { "🤙🏾" }, { "🤙🏾" }, { "🤙🏿" }, { "🤙🏿" },
	{ "🫲" }, { "🫲🏻" }, { "🫲🏻" }, { "🫲🏼" }, { "🫲🏼" }, { "🫲🏽" }, { "🫲🏽" }, { "🫲🏾" }, { "🫲🏾" }, { "🫲🏿" }, { "🫲🏿" }, { "🫱" }, { "🫱🏻" }, { "🫱🏻" }, { "🫱🏼" },
	{ "🫱🏼" }, { "🫱🏽" }, { "🫱🏽" }, { "🫱🏾" }, { "🫱🏾" }, { "🫱🏿" }, { "🫱🏿" }, { "💪" }, { "💪" }, { "💪🏻" }, { "💪🏼" }, { "💪🏽" }, { "💪🏾" }, { "💪🏿" }, { "🦾" },
	{ "🖕" }, { "🖕" }, { "🖕🏻" }, { "🖕🏻" }, { "🖕🏼" }, { "🖕🏼" }, { "🖕🏽" }, { "🖕🏽" }, { "🖕🏾" }, { "🖕🏾" }, { "🖕🏿" }, { "🖕🏿" }, { "✍️" }, { "✍🏻" }, { "✍🏼" },
	{ "✍🏽" }, { "✍🏾" }, { "✍🏿" }, { "🙏" }, { "🙏" }, { "🙏🏻" }, { "🙏🏼" }, { "🙏🏽" }, { "🙏🏾" }, { "🙏🏿" }, { "🫵" }, { "🫵🏻" }, { "🫵🏻" }, { "🫵🏼" }, { "🫵🏼" },
	{ "🫵🏽" }, { "🫵🏽" }, { "🫵🏾" }, { "🫵🏾" }, { "🫵🏿" }, { "🫵🏿" }, { "🦶" }, { "🦶🏻" }, { "🦶🏻" }, { "🦶🏼" }, { "🦶🏼" }, { "🦶🏽" }, { "🦶🏽" }, { "🦶🏾" },
	{ "🦶🏾" }, { "🦶🏿" }, { "🦶🏿" }, { "🦵" }, { "🦵🏻" }, { "🦵🏻" }, { "🦵🏼" }, { "🦵🏼" }, { "🦵🏽" }, { "🦵🏽" }, { "🦵🏾" }, { "🦵🏾" }, { "🦵🏿" }, { "🦵🏿" }, { "🦿" },
	{ "💄" }, { "💋" }, { "💋" }, { "👄" }, { "👄" }, { "🫦" }, { "🦷" }, { "👅" }, { "👂" }, { "👂🏻" }, { "👂🏼" }, { "👂🏽" }, { "👂🏾" }, { "👂🏿" }, { "🦻" }, { "🦻🏻" },
	{ "🦻🏻" }, { "🦻🏼" }, { "🦻🏼" }, { "🦻🏽" }, { "🦻🏽" }, { "🦻🏾" }, { "🦻🏾" }, { "🦻🏿" }, { "🦻🏿" }, { "👃" }, { "👃🏻" }, { "👃🏼" }, { "👃🏽" }, { "👃🏾" },
	{ "👃🏿" }, { "👣" }, { "👁️" }, { "👀" }, { "🫀" }, { "🫁" }, { "🧠" }, { "🗣️" }, { "🗣️" }, { "👤" }, { "👥" }, { "🫂" }, { "👶" }, { "👶🏻" }, { "👶🏼" }, { "👶🏽" },
	{ "👶🏾" }, { "👶🏿" }, { "🧒" }, { "🧒🏻" }, { "🧒🏻" }, { "🧒🏼" }, { "🧒🏼" }, { "🧒🏽" }, { "🧒🏽" }, { "🧒🏾" }, { "🧒🏾" }, { "🧒🏿" }, { "🧒🏿" }, { "👧" }, { "👧🏻" },
	{ "👧🏼" }, { "👧🏽" }, { "👧🏾" }, { "👧🏿" }, { "👦" }, { "👦🏻" }, { "👦🏼" }, { "👦🏽" }, { "👦🏾" }, { "👦🏿" }, { "🧑" }, { "🧑" }, { "🧑🏻" }, { "🧑🏻" }, { "🧑🏼" },
	{ "🧑🏼" }, { "🧑🏽" }, { "🧑🏽" }, { "🧑🏾" }, { "🧑🏾" }, { "🧑🏿" }, { "🧑🏿" }, { "👩" }, { "👩🏻" }, { "👩🏼" }, { "👩🏽" }, { "👩🏾" }, { "👩🏿" }, { "👨" }, { "👨🏻" },
	{ "👨🏼" }, { "👨🏽" }, { "👨🏾" }, { "👨🏿" }, { "🧑‍🦱" }, { "🧑🏻‍🦱" }, { "🧑🏻‍🦱" }, { "🧑🏼‍🦱" }, { "🧑🏼‍🦱" },
	{ "🧑🏽‍🦱" }, { "🧑🏽‍🦱" }, { "🧑🏾‍🦱" }, { "🧑🏾‍🦱" }, { "🧑🏿‍🦱" }, { "🧑🏿‍🦱" }, { "👩‍🦱" },
	{ "👩🏻‍🦱" }, { "👩🏻‍🦱" }, { "👩🏼‍🦱" }, { "👩🏼‍🦱" }, { "👩🏽‍🦱" }, { "👩🏽‍🦱" }, { "👩🏾‍🦱" },
	{ "👩🏾‍🦱" }, { "👩🏿‍🦱" }, { "👩🏿‍🦱" }, { "👨‍🦱" }, { "👨🏻‍🦱" }, { "👨🏻‍🦱" }, { "👨🏼‍🦱" },
	{ "👨🏼‍🦱" }, { "👨🏽‍🦱" }, { "👨🏽‍🦱" }, { "👨🏾‍🦱" }, { "👨🏾‍🦱" }, { "👨🏿‍🦱" }, { "👨🏿‍🦱" },
	{ "🧑‍🦰" }, { "🧑🏻‍🦰" }, { "🧑🏻‍🦰" }, { "🧑🏼‍🦰" }, { "🧑🏼‍🦰" }, { "🧑🏽‍🦰" }, { "🧑🏽‍🦰" },
	{ "🧑🏾‍🦰" }, { "🧑🏾‍🦰" }, { "🧑🏿‍🦰" }, { "🧑🏿‍🦰" }, { "👩‍🦰" }, { "👩🏻‍🦰" }, { "👩🏻‍🦰" },
	{ "👩🏼‍🦰" }, { "👩🏼‍🦰" }, { "👩🏽‍🦰" }, { "👩🏽‍🦰" }, { "👩🏾‍🦰" }, { "👩🏾‍🦰" }, { "👩🏿‍🦰" },
	{ "👩🏿‍🦰" }, { "👨‍🦰" }, { "👨‍🦰" }, { "👨🏻‍🦰" }, { "👨🏻‍🦰" }, { "👨🏼‍🦰" }, { "👨🏼‍🦰" }, { "👨🏽‍🦰" },
	{ "👨🏽‍🦰" }, { "👨🏾‍🦰" }, { "👨🏾‍🦰" }, { "👨🏿‍🦰" }, { "👨🏿‍🦰" }, { "👱" }, { "👱" }, { "👱🏻" }, { "👱🏻" }, { "👱🏼" },
	{ "👱🏼" }, { "👱🏽" }, { "👱🏽" }, { "👱🏾" }, { "👱🏾" }, { "👱🏿" }, { "👱🏿" }, { "👱‍♀️" }, { "👱🏻‍♀️" }, { "👱🏻‍♀️" },
	{ "👱🏼‍♀️" }, { "👱🏼‍♀️" }, { "👱🏽‍♀️" }, { "👱🏽‍♀️" }, { "👱🏾‍♀️" }, { "👱🏾‍♀️" }, { "👱🏿‍♀️" },
	{ "👱🏿‍♀️" }, { "👱‍♂️" }, { "👱🏻‍♂️" }, { "👱🏻‍♂️" }, { "👱🏼‍♂️" }, { "👱🏼‍♂️" }, { "👱🏽‍♂️" },
	{ "👱🏽‍♂️" }, { "👱🏾‍♂️" }, { "👱🏾‍♂️" }, { "👱🏿‍♂️" }, { "👱🏿‍♂️" }, { "🧑‍🦳" }, { "🧑🏻‍🦳" },
	{ "🧑🏻‍🦳" }, { "🧑🏼‍🦳" }, { "🧑🏼‍🦳" }, { "🧑🏽‍🦳" }, { "🧑🏽‍🦳" }, { "🧑🏾‍🦳" }, { "🧑🏾‍🦳" },
	{ "🧑🏿‍🦳" }, { "🧑🏿‍🦳" }, { "👩‍🦳" }, { "👩🏻‍🦳" }, { "👩🏻‍🦳" }, { "👩🏼‍🦳" }, { "👩🏼‍🦳" },
	{ "👩🏽‍🦳" }, { "👩🏽‍🦳" }, { "👩🏾‍🦳" }, { "👩🏾‍🦳" }, { "👩🏿‍🦳" }, { "👩🏿‍🦳" }, { "👨‍🦳" },
	{ "👨🏻‍🦳" }, { "👨🏻‍🦳" }, { "👨🏼‍🦳" }, { "👨🏼‍🦳" }, { "👨🏽‍🦳" }, { "👨🏽‍🦳" }, { "👨🏾‍🦳" },
	{ "👨🏾‍🦳" }, { "👨🏿‍🦳" }, { "👨🏿‍🦳" }, { "🧑‍🦲" }, { "🧑🏻‍🦲" }, { "🧑🏻‍🦲" }, { "🧑🏼‍🦲" },
	{ "🧑🏼‍🦲" }, { "🧑🏽‍🦲" }, { "🧑🏽‍🦲" }, { "🧑🏾‍🦲" }, { "🧑🏾‍🦲" }, { "🧑🏿‍🦲" }, { "🧑🏿‍🦲" },
	{ "👩‍🦲" }, { "👩🏻‍🦲" }, { "👩🏻‍🦲" }, { "👩🏼‍🦲" }, { "👩🏼‍🦲" }, { "👩🏽‍🦲" }, { "👩🏽‍🦲" },
	{ "👩🏾‍🦲" }, { "👩🏾‍🦲" }, { "👩🏿‍🦲" }, { "👩🏿‍🦲" }, { "👨‍🦲" }, { "👨🏻‍🦲" }, { "👨🏻‍🦲" },
	{ "👨🏼‍🦲" }, { "👨🏼‍🦲" }, { "👨🏽‍🦲" }, { "👨🏽‍🦲" }, { "👨🏾‍🦲" }, { "👨🏾‍🦲" }, { "👨🏿‍🦲" },
	{ "👨🏿‍🦲" }, { "🧔" }, { "🧔" }, { "🧔🏻" }, { "🧔🏻" }, { "🧔🏼" }, { "🧔🏼" }, { "🧔🏽" }, { "🧔🏽" }, { "🧔🏾" }, { "🧔🏾" }, { "🧔🏿" }, { "🧔🏿" },
	{ "🧔‍♀️" }, { "🧔🏻‍♀️" }, { "🧔🏻‍♀️" }, { "🧔🏼‍♀️" }, { "🧔🏼‍♀️" }, { "🧔🏽‍♀️" }, { "🧔🏽‍♀️" },
	{ "🧔🏾‍♀️" }, { "🧔🏾‍♀️" }, { "🧔🏿‍♀️" }, { "🧔🏿‍♀️" }, { "🧔‍♂️" }, { "🧔🏻‍♂️" }, { "🧔🏻‍♂️" },
	{ "🧔🏼‍♂️" }, { "🧔🏼‍♂️" }, { "🧔🏽‍♂️" }, { "🧔🏽‍♂️" }, { "🧔🏾‍♂️" }, { "🧔🏾‍♂️" }, { "🧔🏿‍♂️" },
	{ "🧔🏿‍♂️" }, { "🧓" }, { "🧓" }, { "🧓🏻" }, { "🧓🏻" }, { "🧓🏼" }, { "🧓🏼" }, { "🧓🏽" }, { "🧓🏽" }, { "🧓🏾" }, { "🧓🏾" }, { "🧓🏿" }, { "🧓🏿" }, { "👵" },
	{ "👵" }, { "👵" }, { "👵🏻" }, { "👵🏻" }, { "👵🏼" }, { "👵🏼" }, { "👵🏽" }, { "👵🏽" }, { "👵🏾" }, { "👵🏾" }, { "👵🏿" }, { "👵🏿" }, { "👴" }, { "👴" }, { "👴🏻" },
	{ "👴🏼" }, { "👴🏽" }, { "👴🏾" }, { "👴🏿" }, { "👲" }, { "👲" }, { "👲🏻" }, { "👲🏻" }, { "👲🏼" }, { "👲🏼" }, { "👲🏽" }, { "👲🏽" }, { "👲🏾" }, { "👲🏾" }, { "👲🏿" },
	{ "👲🏿" }, { "👳" }, { "👳" }, { "👳🏻" }, { "👳🏻" }, { "👳🏼" }, { "👳🏼" }, { "👳🏽" }, { "👳🏽" }, { "👳🏾" }, { "👳🏾" }, { "👳🏿" }, { "👳🏿" }, { "👳‍♀️" },
	{ "👳🏻‍♀️" }, { "👳🏻‍♀️" }, { "👳🏼‍♀️" }, { "👳🏼‍♀️" }, { "👳🏽‍♀️" }, { "👳🏽‍♀️" }, { "👳🏾‍♀️" },
	{ "👳🏾‍♀️" }, { "👳🏿‍♀️" }, { "👳🏿‍♀️" }, { "👳‍♂️" }, { "👳🏻‍♂️" }, { "👳🏻‍♂️" }, { "👳🏼‍♂️" },
	{ "👳🏼‍♂️" }, { "👳🏽‍♂️" }, { "👳🏽‍♂️" }, { "👳🏾‍♂️" }, { "👳🏾‍♂️" }, { "👳🏿‍♂️" }, { "👳🏿‍♂️" },
	{ "🧕" }, { "🧕🏻" }, { "🧕🏻" }, { "🧕🏼" }, { "🧕🏼" }, { "🧕🏽" }, { "🧕🏽" }, { "🧕🏾" }, { "🧕🏾" }, { "🧕🏿" }, { "🧕🏿" }, { "👮" }, { "👮" }, { "👮🏻" }, { "👮🏻" },
	{ "👮🏼" }, { "👮🏼" }, { "👮🏽" }, { "👮🏽" }, { "👮🏾" }, { "👮🏾" }, { "👮🏿" }, { "👮🏿" }, { "👮‍♀️" }, { "👮🏻‍♀️" }, { "👮🏻‍♀️" },
	{ "👮🏼‍♀️" }, { "👮🏼‍♀️" }, { "👮🏽‍♀️" }, { "👮🏽‍♀️" }, { "👮🏾‍♀️" }, { "👮🏾‍♀️" }, { "👮🏿‍♀️" },
	{ "👮🏿‍♀️" }, { "👮‍♂️" }, { "👮🏻‍♂️" }, { "👮🏻‍♂️" }, { "👮🏼‍♂️" }, { "👮🏼‍♂️" }, { "👮🏽‍♂️" },
	{ "👮🏽‍♂️" }, { "👮🏾‍♂️" }, { "👮🏾‍♂️" }, { "👮🏿‍♂️" }, { "👮🏿‍♂️" }, { "👷" }, { "👷🏻" }, { "👷🏼" }, { "👷🏽" },
	{ "👷🏾" }, { "👷🏿" }, { "👷‍♀️" }, { "👷🏻‍♀️" }, { "👷🏻‍♀️" }, { "👷🏼‍♀️" }, { "👷🏼‍♀️" }, { "👷🏽‍♀️" },
	{ "👷🏽‍♀️" }, { "👷🏾‍♀️" }, { "👷🏾‍♀️" }, { "👷🏿‍♀️" }, { "👷🏿‍♀️" }, { "👷‍♂️" }, { "👷🏻‍♂️" },
	{ "👷🏻‍♂️" }, { "👷🏼‍♂️" }, { "👷🏼‍♂️" }, { "👷🏽‍♂️" }, { "👷🏽‍♂️" }, { "👷🏾‍♂️" }, { "👷🏾‍♂️" },
	{ "👷🏿‍♂️" }, { "👷🏿‍♂️" }, { "💂" }, { "💂" }, { "💂🏻" }, { "💂🏻" }, { "💂🏼" }, { "💂🏼" }, { "💂🏽" }, { "💂🏽" }, { "💂🏾" }, { "💂🏾" },
	{ "💂🏿" }, { "💂🏿" }, { "💂‍♀️" }, { "💂🏻‍♀️" }, { "💂🏻‍♀️" }, { "💂🏼‍♀️" }, { "💂🏼‍♀️" }, { "💂🏽‍♀️" },
	{ "💂🏽‍♀️" }, { "💂🏾‍♀️" }, { "💂🏾‍♀️" }, { "💂🏿‍♀️" }, { "💂🏿‍♀️" }, { "💂‍♂️" }, { "💂🏻‍♂️" },
	{ "💂🏻‍♂️" }, { "💂🏼‍♂️" }, { "💂🏼‍♂️" }, { "💂🏽‍♂️" }, { "💂🏽‍♂️" }, { "💂🏾‍♂️" }, { "💂🏾‍♂️" },
	{ "💂🏿‍♂️" }, { "💂🏿‍♂️" }, { "🕵️" }, { "🕵️" }, { "🕵️" }, { "🕵🏻" }, { "🕵🏻" }, { "🕵🏻" }, { "🕵🏼" }, { "🕵🏼" }, { "🕵🏼" }, { "🕵🏽" }, { "🕵🏽" },
	{ "🕵🏽" }, { "🕵🏾" }, { "🕵🏾" }, { "🕵🏾" }, { "🕵🏿" }, { "🕵🏿" }, { "🕵🏿" }, { "🕵️‍♀️" }, { "🕵🏻‍♀️" }, { "🕵🏻‍♀️" },
	{ "🕵🏼‍♀️" }, { "🕵🏼‍♀️" }, { "🕵🏽‍♀️" }, { "🕵🏽‍♀️" }, { "🕵🏾‍♀️" }, { "🕵🏾‍♀️" }, { "🕵🏿‍♀️" },
	{ "🕵🏿‍♀️" }, { "🕵️‍♂️" }, { "🕵🏻‍♂️" }, { "🕵🏻‍♂️" }, { "🕵🏼‍♂️" }, { "🕵🏼‍♂️" }, { "🕵🏽‍♂️" },
	{ "🕵🏽‍♂️" }, { "🕵🏾‍♂️" }, { "🕵🏾‍♂️" }, { "🕵🏿‍♂️" }, { "🕵🏿‍♂️" }, { "🧑‍⚕️" }, { "🧑🏻‍⚕️" },
	{ "🧑🏻‍⚕️" }, { "🧑🏼‍⚕️" }, { "🧑🏼‍⚕️" }, { "🧑🏽‍⚕️" }, { "🧑🏽‍⚕️" }, { "🧑🏾‍⚕️" }, { "🧑🏾‍⚕️" },
	{ "🧑🏿‍⚕️" }, { "🧑🏿‍⚕️" }, { "👩‍⚕️" }, { "👩🏻‍⚕️" }, { "👩🏻‍⚕️" }, { "👩🏼‍⚕️" }, { "👩🏼‍⚕️" },
	{ "👩🏽‍⚕️" }, { "👩🏽‍⚕️" }, { "👩🏾‍⚕️" }, { "👩🏾‍⚕️" }, { "👩🏿‍⚕️" }, { "👩🏿‍⚕️" }, { "👨‍⚕️" },
	{ "👨🏻‍⚕️" }, { "👨🏻‍⚕️" }, { "👨🏼‍⚕️" }, { "👨🏼‍⚕️" }, { "👨🏽‍⚕️" }, { "👨🏽‍⚕️" }, { "👨🏾‍⚕️" },
	{ "👨🏾‍⚕️" }, { "👨🏿‍⚕️" }, { "👨🏿‍⚕️" }, { "🧑‍🌾" }, { "🧑🏻‍🌾" }, { "🧑🏻‍🌾" }, { "🧑🏼‍🌾" },
	{ "🧑🏼‍🌾" }, { "🧑🏽‍🌾" }, { "🧑🏽‍🌾" }, { "🧑🏾‍🌾" }, { "🧑🏾‍🌾" }, { "🧑🏿‍🌾" }, { "🧑🏿‍🌾" },
	{ "👩‍🌾" }, { "👩🏻‍🌾" }, { "👩🏻‍🌾" }, { "👩🏼‍🌾" }, { "👩🏼‍🌾" }, { "👩🏽‍🌾" }, { "👩🏽‍🌾" },
	{ "👩🏾‍🌾" }, { "👩🏾‍🌾" }, { "👩🏿‍🌾" }, { "👩🏿‍🌾" }, { "👨‍🌾" }, { "👨🏻‍🌾" }, { "👨🏻‍🌾" },
	{ "👨🏼‍🌾" }, { "👨🏼‍🌾" }, { "👨🏽‍🌾" }, { "👨🏽‍🌾" }, { "👨🏾‍🌾" }, { "👨🏾‍🌾" }, { "👨🏿‍🌾" },
	{ "👨🏿‍🌾" }, { "🧑‍🍳" }, { "🧑🏻‍🍳" }, { "🧑🏻‍🍳" }, { "🧑🏼‍🍳" }, { "🧑🏼‍🍳" }, { "🧑🏽‍🍳" },
	{ "🧑🏽‍🍳" }, { "🧑🏾‍🍳" }, { "🧑🏾‍🍳" }, { "🧑🏿‍🍳" }, { "🧑🏿‍🍳" }, { "👩‍🍳" }, { "👩🏻‍🍳" },
	{ "👩🏻‍🍳" }, { "👩🏼‍🍳" }, { "👩🏼‍🍳" }, { "👩🏽‍🍳" }, { "👩🏽‍🍳" }, { "👩🏾‍🍳" }, { "👩🏾‍🍳" },
	{ "👩🏿‍🍳" }, { "👩🏿‍🍳" }, { "👨‍🍳" }, { "👨🏻‍🍳" }, { "👨🏻‍🍳" }, { "👨🏼‍🍳" }, { "👨🏼‍🍳" },
	{ "👨🏽‍🍳" }, { "👨🏽‍🍳" }, { "👨🏾‍🍳" }, { "👨🏾‍🍳" }, { "👨🏿‍🍳" }, { "👨🏿‍🍳" }, { "🧑‍🎓" },
	{ "🧑🏻‍🎓" }, { "🧑🏻‍🎓" }, { "🧑🏼‍🎓" }, { "🧑🏼‍🎓" }, { "🧑🏽‍🎓" }, { "🧑🏽‍🎓" }, { "🧑🏾‍🎓" },
	{ "🧑🏾‍🎓" }, { "🧑🏿‍🎓" }, { "🧑🏿‍🎓" }, { "👩‍🎓" }, { "👩🏻‍🎓" }, { "👩🏻‍🎓" }, { "👩🏼‍🎓" },
	{ "👩🏼‍🎓" }, { "👩🏽‍🎓" }, { "👩🏽‍🎓" }, { "👩🏾‍🎓" }, { "👩🏾‍🎓" }, { "👩🏿‍🎓" }, { "👩🏿‍🎓" },
	{ "👨‍🎓" }, { "👨🏻‍🎓" }, { "👨🏻‍🎓" }, { "👨🏼‍🎓" }, { "👨🏼‍🎓" }, { "👨🏽‍🎓" }, { "👨🏽‍🎓" },
	{ "👨🏾‍🎓" }, { "👨🏾‍🎓" }, { "👨🏿‍🎓" }, { "👨🏿‍🎓" }, { "🧑‍🎤" }, { "🧑🏻‍🎤" }, { "🧑🏻‍🎤" },
	{ "🧑🏼‍🎤" }, { "🧑🏼‍🎤" }, { "🧑🏽‍🎤" }, { "🧑🏽‍🎤" }, { "🧑🏾‍🎤" }, { "🧑🏾‍🎤" }, { "🧑🏿‍🎤" },
	{ "🧑🏿‍🎤" }, { "👩‍🎤" }, { "👩🏻‍🎤" }, { "👩🏻‍🎤" }, { "👩🏼‍🎤" }, { "👩🏼‍🎤" }, { "👩🏽‍🎤" },
	{ "👩🏽‍🎤" }, { "👩🏾‍🎤" }, { "👩🏾‍🎤" }, { "👩🏿‍🎤" }, { "👩🏿‍🎤" }, { "👨‍🎤" }, { "👨🏻‍🎤" },
	{ "👨🏻‍🎤" }, { "👨🏼‍🎤" }, { "👨🏼‍🎤" }, { "👨🏽‍🎤" }, { "👨🏽‍🎤" }, { "👨🏾‍🎤" }, { "👨🏾‍🎤" },
	{ "👨🏿‍🎤" }, { "👨🏿‍🎤" }, { "🧑‍🏫" }, { "🧑🏻‍🏫" }, { "🧑🏻‍🏫" }, { "🧑🏼‍🏫" }, { "🧑🏼‍🏫" },
	{ "🧑🏽‍🏫" }, { "🧑🏽‍🏫" }, { "🧑🏾‍🏫" }, { "🧑🏾‍🏫" }, { "🧑🏿‍🏫" }, { "🧑🏿‍🏫" }, { "👩‍🏫" },
	{ "👩🏻‍🏫" }, { "👩🏻‍🏫" }, { "👩🏼‍🏫" }, { "👩🏼‍🏫" }, { "👩🏽‍🏫" }, { "👩🏽‍🏫" }, { "👩🏾‍🏫" },
	{ "👩🏾‍🏫" }, { "👩🏿‍🏫" }, { "👩🏿‍🏫" }, { "👨‍🏫" }, { "👨🏻‍🏫" }, { "👨🏻‍🏫" }, { "👨🏼‍🏫" },
	{ "👨🏼‍🏫" }, { "👨🏽‍🏫" }, { "👨🏽‍🏫" }, { "👨🏾‍🏫" }, { "👨🏾‍🏫" }, { "👨🏿‍🏫" }, { "👨🏿‍🏫" },
	{ "🧑‍🏭" }, { "🧑🏻‍🏭" }, { "🧑🏻‍🏭" }, { "🧑🏼‍🏭" }, { "🧑🏼‍🏭" }, { "🧑🏽‍🏭" }, { "🧑🏽‍🏭" },
	{ "🧑🏾‍🏭" }, { "🧑🏾‍🏭" }, { "🧑🏿‍🏭" }, { "🧑🏿‍🏭" }, { "👩‍🏭" }, { "👩🏻‍🏭" }, { "👩🏻‍🏭" },
	{ "👩🏼‍🏭" }, { "👩🏼‍🏭" }, { "👩🏽‍🏭" }, { "👩🏽‍🏭" }, { "👩🏾‍🏭" }, { "👩🏾‍🏭" }, { "👩🏿‍🏭" },
	{ "👩🏿‍🏭" }, { "👨‍🏭" }, { "👨🏻‍🏭" }, { "👨🏻‍🏭" }, { "👨🏼‍🏭" }, { "👨🏼‍🏭" }, { "👨🏽‍🏭" },
	{ "👨🏽‍🏭" }, { "👨🏾‍🏭" }, { "👨🏾‍🏭" }, { "👨🏿‍🏭" }, { "👨🏿‍🏭" }, { "🧑‍💻" }, { "🧑🏻‍💻" },
	{ "🧑🏻‍💻" }, { "🧑🏼‍💻" }, { "🧑🏼‍💻" }, { "🧑🏽‍💻" }, { "🧑🏽‍💻" }, { "🧑🏾‍💻" }, { "🧑🏾‍💻" },
	{ "🧑🏿‍💻" }, { "🧑🏿‍💻" }, { "👩‍💻" }, { "👩🏻‍💻" }, { "👩🏻‍💻" }, { "👩🏼‍💻" }, { "👩🏼‍💻" },
	{ "👩🏽‍💻" }, { "👩🏽‍💻" }, { "👩🏾‍💻" }, { "👩🏾‍💻" }, { "👩🏿‍💻" }, { "👩🏿‍💻" }, { "👨‍💻" },
	{ "👨🏻‍💻" }, { "👨🏻‍💻" }, { "👨🏼‍💻" }, { "👨🏼‍💻" }, { "👨🏽‍💻" }, { "👨🏽‍💻" }, { "👨🏾‍💻" },
	{ "👨🏾‍💻" }, { "👨🏿‍💻" }, { "👨🏿‍💻" }, { "🧑‍💼" }, { "🧑🏻‍💼" }, { "🧑🏻‍💼" }, { "🧑🏼‍💼" },
	{ "🧑🏼‍💼" }, { "🧑🏽‍💼" }, { "🧑🏽‍💼" }, { "🧑🏾‍💼" }, { "🧑🏾‍💼" }, { "🧑🏿‍💼" }, { "🧑🏿‍💼" },
	{ "👩‍💼" }, { "👩🏻‍💼" }, { "👩🏻‍💼" }, { "👩🏼‍💼" }, { "👩🏼‍💼" }, { "👩🏽‍💼" }, { "👩🏽‍💼" },
	{ "👩🏾‍💼" }, { "👩🏾‍💼" }, { "👩🏿‍💼" }, { "👩🏿‍💼" }, { "👨‍💼" }, { "👨🏻‍💼" }, { "👨🏻‍💼" },
	{ "👨🏼‍💼" }, { "👨🏼‍💼" }, { "👨🏽‍💼" }, { "👨🏽‍💼" }, { "👨🏾‍💼" }, { "👨🏾‍💼" }, { "👨🏿‍💼" },
	{ "👨🏿‍💼" }, { "🧑‍🔧" }, { "🧑🏻‍🔧" }, { "🧑🏻‍🔧" }, { "🧑🏼‍🔧" }, { "🧑🏼‍🔧" }, { "🧑🏽‍🔧" },
	{ "🧑🏽‍🔧" }, { "🧑🏾‍🔧" }, { "🧑🏾‍🔧" }, { "🧑🏿‍🔧" }, { "🧑🏿‍🔧" }, { "👩‍🔧" }, { "👩🏻‍🔧" },
	{ "👩🏻‍🔧" }, { "👩🏼‍🔧" }, { "👩🏼‍🔧" }, { "👩🏽‍🔧" }, { "👩🏽‍🔧" }, { "👩🏾‍🔧" }, { "👩🏾‍🔧" },
	{ "👩🏿‍🔧" }, { "👩🏿‍🔧" }, { "👨‍🔧" }, { "👨🏻‍🔧" }, { "👨🏻‍🔧" }, { "👨🏼‍🔧" }, { "👨🏼‍🔧" },
	{ "👨🏽‍🔧" }, { "👨🏽‍🔧" }, { "👨🏾‍🔧" }, { "👨🏾‍🔧" }, { "👨🏿‍🔧" }, { "👨🏿‍🔧" }, { "🧑‍🔬" },
	{ "🧑🏻‍🔬" }, { "🧑🏻‍🔬" }, { "🧑🏼‍🔬" }, { "🧑🏼‍🔬" }, { "🧑🏽‍🔬" }, { "🧑🏽‍🔬" }, { "🧑🏾‍🔬" },
	{ "🧑🏾‍🔬" }, { "🧑🏿‍🔬" }, { "🧑🏿‍🔬" }, { "👩‍🔬" }, { "👩🏻‍🔬" }, { "👩🏻‍🔬" }, { "👩🏼‍🔬" },
	{ "👩🏼‍🔬" }, { "👩🏽‍🔬" }, { "👩🏽‍🔬" }, { "👩🏾‍🔬" }, { "👩🏾‍🔬" }, { "👩🏿‍🔬" }, { "👩🏿‍🔬" },
	{ "👨‍🔬" }, { "👨🏻‍🔬" }, { "👨🏻‍🔬" }, { "👨🏼‍🔬" }, { "👨🏼‍🔬" }, { "👨🏽‍🔬" }, { "👨🏽‍🔬" },
	{ "👨🏾‍🔬" }, { "👨🏾‍🔬" }, { "👨🏿‍🔬" }, { "👨🏿‍🔬" }, { "🧑‍🎨" }, { "🧑🏻‍🎨" }, { "🧑🏻‍🎨" },
	{ "🧑🏼‍🎨" }, { "🧑🏼‍🎨" }, { "🧑🏽‍🎨" }, { "🧑🏽‍🎨" }, { "🧑🏾‍🎨" }, { "🧑🏾‍🎨" }, { "🧑🏿‍🎨" },
	{ "🧑🏿‍🎨" }, { "👩‍🎨" }, { "👩🏻‍🎨" }, { "👩🏻‍🎨" }, { "👩🏼‍🎨" }, { "👩🏼‍🎨" }, { "👩🏽‍🎨" },
	{ "👩🏽‍🎨" }, { "👩🏾‍🎨" }, { "👩🏾‍🎨" }, { "👩🏿‍🎨" }, { "👩🏿‍🎨" }, { "👨‍🎨" }, { "👨🏻‍🎨" },
	{ "👨🏻‍🎨" }, { "👨🏼‍🎨" }, { "👨🏼‍🎨" }, { "👨🏽‍🎨" }, { "👨🏽‍🎨" }, { "👨🏾‍🎨" }, { "👨🏾‍🎨" },
	{ "👨🏿‍🎨" }, { "👨🏿‍🎨" }, { "🧑‍🚒" }, { "🧑🏻‍🚒" }, { "🧑🏻‍🚒" }, { "🧑🏼‍🚒" }, { "🧑🏼‍🚒" },
	{ "🧑🏽‍🚒" }, { "🧑🏽‍🚒" }, { "🧑🏾‍🚒" }, { "🧑🏾‍🚒" }, { "🧑🏿‍🚒" }, { "🧑🏿‍🚒" }, { "👩‍🚒" },
	{ "👩🏻‍🚒" }, { "👩🏻‍🚒" }, { "👩🏼‍🚒" }, { "👩🏼‍🚒" }, { "👩🏽‍🚒" }, { "👩🏽‍🚒" }, { "👩🏾‍🚒" },
	{ "👩🏾‍🚒" }, { "👩🏿‍🚒" }, { "👩🏿‍🚒" }, { "👨‍🚒" }, { "👨🏻‍🚒" }, { "👨🏻‍🚒" }, { "👨🏼‍🚒" },
	{ "👨🏼‍🚒" }, { "👨🏽‍🚒" }, { "👨🏽‍🚒" }, { "👨🏾‍🚒" }, { "👨🏾‍🚒" }, { "👨🏿‍🚒" }, { "👨🏿‍🚒" },
	{ "🧑‍✈️" }, { "🧑🏻‍✈️" }, { "🧑🏻‍✈️" }, { "🧑🏼‍✈️" }, { "🧑🏼‍✈️" }, { "🧑🏽‍✈️" }, { "🧑🏽‍✈️" },
	{ "🧑🏾‍✈️" }, { "🧑🏾‍✈️" }, { "🧑🏿‍✈️" }, { "🧑🏿‍✈️" }, { "👩‍✈️" }, { "👩🏻‍✈️" }, { "👩🏻‍✈️" },
	{ "👩🏼‍✈️" }, { "👩🏼‍✈️" }, { "👩🏽‍✈️" }, { "👩🏽‍✈️" }, { "👩🏾‍✈️" }, { "👩🏾‍✈️" }, { "👩🏿‍✈️" },
	{ "👩🏿‍✈️" }, { "👨‍✈️" }, { "👨🏻‍✈️" }, { "👨🏻‍✈️" }, { "👨🏼‍✈️" }, { "👨🏼‍✈️" }, { "👨🏽‍✈️" },
	{ "👨🏽‍✈️" }, { "👨🏾‍✈️" }, { "👨🏾‍✈️" }, { "👨🏿‍✈️" }, { "👨🏿‍✈️" }, { "🧑‍🚀" }, { "🧑🏻‍🚀" },
	{ "🧑🏻‍🚀" }, { "🧑🏼‍🚀" }, { "🧑🏼‍🚀" }, { "🧑🏽‍🚀" }, { "🧑🏽‍🚀" }, { "🧑🏾‍🚀" }, { "🧑🏾‍🚀" },
	{ "🧑🏿‍🚀" }, { "🧑🏿‍🚀" }, { "👩‍🚀" }, { "👩🏻‍🚀" }, { "👩🏻‍🚀" }, { "👩🏼‍🚀" }, { "👩🏼‍🚀" },
	{ "👩🏽‍🚀" }, { "👩🏽‍🚀" }, { "👩🏾‍🚀" }, { "👩🏾‍🚀" }, { "👩🏿‍🚀" }, { "👩🏿‍🚀" }, { "👨‍🚀" },
	{ "👨🏻‍🚀" }, { "👨🏻‍🚀" }, { "👨🏼‍🚀" }, { "👨🏼‍🚀" }, { "👨🏽‍🚀" }, { "👨🏽‍🚀" }, { "👨🏾‍🚀" },
	{ "👨🏾‍🚀" }, { "👨🏿‍🚀" }, { "👨🏿‍🚀" }, { "🧑‍⚖️" }, { "🧑🏻‍⚖️" }, { "🧑🏻‍⚖️" }, { "🧑🏼‍⚖️" },
	{ "🧑🏼‍⚖️" }, { "🧑🏽‍⚖️" }, { "🧑🏽‍⚖️" }, { "🧑🏾‍⚖️" }, { "🧑🏾‍⚖️" }, { "🧑🏿‍⚖️" }, { "🧑🏿‍⚖️" },
	{ "👩‍⚖️" }, { "👩🏻‍⚖️" }, { "👩🏻‍⚖️" }, { "👩🏼‍⚖️" }, { "👩🏼‍⚖️" }, { "👩🏽‍⚖️" }, { "👩🏽‍⚖️" },
	{ "👩🏾‍⚖️" }, { "👩🏾‍⚖️" }, { "👩🏿‍⚖️" }, { "👩🏿‍⚖️" }, { "👨‍⚖️" }, { "👨🏻‍⚖️" }, { "👨🏻‍⚖️" },
	{ "👨🏼‍⚖️" }, { "👨🏼‍⚖️" }, { "👨🏽‍⚖️" }, { "👨🏽‍⚖️" }, { "👨🏾‍⚖️" }, { "👨🏾‍⚖️" }, { "👨🏿‍⚖️" },
	{ "👨🏿‍⚖️" }, { "👰" }, { "👰🏻" }, { "👰🏼" }, { "👰🏽" }, { "👰🏾" }, { "👰🏿" }, { "👰‍♀️" }, { "👰‍♀️" }, { "👰🏻‍♀️" },
	{ "👰🏻‍♀️" }, { "👰🏼‍♀️" }, { "👰🏼‍♀️" }, { "👰🏽‍♀️" }, { "👰🏽‍♀️" }, { "👰🏾‍♀️" }, { "👰🏾‍♀️" },
	{ "👰🏿‍♀️" }, { "👰🏿‍♀️" }, { "👰‍♂️" }, { "👰🏻‍♂️" }, { "👰🏻‍♂️" }, { "👰🏼‍♂️" }, { "👰🏼‍♂️" },
	{ "👰🏽‍♂️" }, { "👰🏽‍♂️" }, { "👰🏾‍♂️" }, { "👰🏾‍♂️" }, { "👰🏿‍♂️" }, { "👰🏿‍♂️" }, { "🤵" }, { "🤵🏻" },
	{ "🤵🏻" }, { "🤵🏼" }, { "🤵🏼" }, { "🤵🏽" }, { "🤵🏽" }, { "🤵🏾" }, { "🤵🏾" }, { "🤵🏿" }, { "🤵🏿" }, { "🤵‍♀️" }, { "🤵🏻‍♀️" },
	{ "🤵🏻‍♀️" }, { "🤵🏼‍♀️" }, { "🤵🏼‍♀️" }, { "🤵🏽‍♀️" }, { "🤵🏽‍♀️" }, { "🤵🏾‍♀️" }, { "🤵🏾‍♀️" },
	{ "🤵🏿‍♀️" }, { "🤵🏿‍♀️" }, { "🤵‍♂️" }, { "🤵🏻‍♂️" }, { "🤵🏻‍♂️" }, { "🤵🏼‍♂️" }, { "🤵🏼‍♂️" },
	{ "🤵🏽‍♂️" }, { "🤵🏽‍♂️" }, { "🤵🏾‍♂️" }, { "🤵🏾‍♂️" }, { "🤵🏿‍♂️" }, { "🤵🏿‍♂️" }, { "🫅" }, { "🫅🏻" },
	{ "🫅🏻" }, { "🫅🏼" }, { "🫅🏼" }, { "🫅🏽" }, { "🫅🏽" }, { "🫅🏾" }, { "🫅🏾" }, { "🫅🏿" }, { "🫅🏿" }, { "👸" }, { "👸🏻" }, { "👸🏼" }, { "👸🏽" }, { "👸🏾" },
	{ "👸🏿" }, { "🤴" }, { "🤴🏻" }, { "🤴🏼" }, { "🤴🏽" }, { "🤴🏾" }, { "🤴🏿" }, { "🦸" }, { "🦸🏻" }, { "🦸🏻" }, { "🦸🏼" }, { "🦸🏼" }, { "🦸🏽" }, { "🦸🏽" }, { "🦸🏾" },
	{ "🦸🏾" }, { "🦸🏿" }, { "🦸🏿" }, { "🦸‍♀️" }, { "🦸🏻‍♀️" }, { "🦸🏻‍♀️" }, { "🦸🏼‍♀️" }, { "🦸🏼‍♀️" },
	{ "🦸🏽‍♀️" }, { "🦸🏽‍♀️" }, { "🦸🏾‍♀️" }, { "🦸🏾‍♀️" }, { "🦸🏿‍♀️" }, { "🦸🏿‍♀️" }, { "🦸‍♂️" },
	{ "🦸🏻‍♂️" }, { "🦸🏻‍♂️" }, { "🦸🏼‍♂️" }, { "🦸🏼‍♂️" }, { "🦸🏽‍♂️" }, { "🦸🏽‍♂️" }, { "🦸🏾‍♂️" },
	{ "🦸🏾‍♂️" }, { "🦸🏿‍♂️" }, { "🦸🏿‍♂️" }, { "🦹" }, { "🦹🏻" }, { "🦹🏻" }, { "🦹🏼" }, { "🦹🏼" }, { "🦹🏽" }, { "🦹🏽" }, { "🦹🏾" },
	{ "🦹🏾" }, { "🦹🏿" }, { "🦹🏿" }, { "🦹‍♀️" }, { "🦹🏻‍♀️" }, { "🦹🏻‍♀️" }, { "🦹🏼‍♀️" }, { "🦹🏼‍♀️" },
	{ "🦹🏽‍♀️" }, { "🦹🏽‍♀️" }, { "🦹🏾‍♀️" }, { "🦹🏾‍♀️" }, { "🦹🏿‍♀️" }, { "🦹🏿‍♀️" }, { "🦹‍♂️" },
	{ "🦹🏻‍♂️" }, { "🦹🏻‍♂️" }, { "🦹🏼‍♂️" }, { "🦹🏼‍♂️" }, { "🦹🏽‍♂️" }, { "🦹🏽‍♂️" }, { "🦹🏾‍♂️" },
	{ "🦹🏾‍♂️" }, { "🦹🏿‍♂️" }, { "🦹🏿‍♂️" }, { "🥷" }, { "🥷🏻" }, { "🥷🏻" }, { "🥷🏼" }, { "🥷🏼" }, { "🥷🏽" }, { "🥷🏽" }, { "🥷🏾" },
	{ "🥷🏾" }, { "🥷🏿" }, { "🥷🏿" }, { "🧑‍🎄" }, { "🧑🏻‍🎄" }, { "🧑🏻‍🎄" }, { "🧑🏼‍🎄" }, { "🧑🏼‍🎄" }, { "🧑🏽‍🎄" },
	{ "🧑🏽‍🎄" }, { "🧑🏾‍🎄" }, { "🧑🏾‍🎄" }, { "🧑🏿‍🎄" }, { "🧑🏿‍🎄" }, { "🤶" }, { "🤶" }, { "🤶🏻" }, { "🤶🏻" }, { "🤶🏼" },
	{ "🤶🏼" }, { "🤶🏽" }, { "🤶🏽" }, { "🤶🏾" }, { "🤶🏾" }, { "🤶🏿" }, { "🤶🏿" }, { "🎅" }, { "🎅" }, { "🎅🏻" }, { "🎅🏼" }, { "🎅🏽" }, { "🎅🏾" }, { "🎅🏿" }, { "🧙" },
	{ "🧙🏻" }, { "🧙🏻" }, { "🧙🏼" }, { "🧙🏼" }, { "🧙🏽" }, { "🧙🏽" }, { "🧙🏾" }, { "🧙🏾" }, { "🧙🏿" }, { "🧙🏿" }, { "🧙‍♀️" }, { "🧙🏻‍♀️" },
	{ "🧙🏻‍♀️" }, { "🧙🏼‍♀️" }, { "🧙🏼‍♀️" }, { "🧙🏽‍♀️" }, { "🧙🏽‍♀️" }, { "🧙🏾‍♀️" }, { "🧙🏾‍♀️" },
	{ "🧙🏿‍♀️" }, { "🧙🏿‍♀️" }, { "🧙‍♂️" }, { "🧙🏻‍♂️" }, { "🧙🏻‍♂️" }, { "🧙🏼‍♂️" }, { "🧙🏼‍♂️" },
	{ "🧙🏽‍♂️" }, { "🧙🏽‍♂️" }, { "🧙🏾‍♂️" }, { "🧙🏾‍♂️" }, { "🧙🏿‍♂️" }, { "🧙🏿‍♂️" }, { "🧝" }, { "🧝🏻" },
	{ "🧝🏻" }, { "🧝🏼" }, { "🧝🏼" }, { "🧝🏽" }, { "🧝🏽" }, { "🧝🏾" }, { "🧝🏾" }, { "🧝🏿" }, { "🧝🏿" }, { "🧝‍♀️" }, { "🧝🏻‍♀️" },
	{ "🧝🏻‍♀️" }, { "🧝🏼‍♀️" }, { "🧝🏼‍♀️" }, { "🧝🏽‍♀️" }, { "🧝🏽‍♀️" }, { "🧝🏾‍♀️" }, { "🧝🏾‍♀️" },
	{ "🧝🏿‍♀️" }, { "🧝🏿‍♀️" }, { "🧝‍♂️" }, { "🧝🏻‍♂️" }, { "🧝🏻‍♂️" }, { "🧝🏼‍♂️" }, { "🧝🏼‍♂️" },
	{ "🧝🏽‍♂️" }, { "🧝🏽‍♂️" }, { "🧝🏾‍♂️" }, { "🧝🏾‍♂️" }, { "🧝🏿‍♂️" }, { "🧝🏿‍♂️" }, { "🧌" }, { "🧛" },
	{ "🧛🏻" }, { "🧛🏻" }, { "🧛🏼" }, { "🧛🏼" }, { "🧛🏽" }, { "🧛🏽" }, { "🧛🏾" }, { "🧛🏾" }, { "🧛🏿" }, { "🧛🏿" }, { "🧛‍♀️" }, { "🧛🏻‍♀️" },
	{ "🧛🏻‍♀️" }, { "🧛🏼‍♀️" }, { "🧛🏼‍♀️" }, { "🧛🏽‍♀️" }, { "🧛🏽‍♀️" }, { "🧛🏾‍♀️" }, { "🧛🏾‍♀️" },
	{ "🧛🏿‍♀️" }, { "🧛🏿‍♀️" }, { "🧛‍♂️" }, { "🧛🏻‍♂️" }, { "🧛🏻‍♂️" }, { "🧛🏼‍♂️" }, { "🧛🏼‍♂️" },
	{ "🧛🏽‍♂️" }, { "🧛🏽‍♂️" }, { "🧛🏾‍♂️" }, { "🧛🏾‍♂️" }, { "🧛🏿‍♂️" }, { "🧛🏿‍♂️" }, { "🧟" },
	{ "🧟‍♀️" }, { "🧟‍♂️" }, { "🧞" }, { "🧞‍♀️" }, { "🧞‍♂️" }, { "🧜" }, { "🧜🏻" }, { "🧜🏻" }, { "🧜🏼" }, { "🧜🏼" }, { "🧜🏽" }, { "🧜🏽" },
	{ "🧜🏾" }, { "🧜🏾" }, { "🧜🏿" }, { "🧜🏿" }, { "🧜‍♀️" }, { "🧜🏻‍♀️" }, { "🧜🏻‍♀️" }, { "🧜🏼‍♀️" }, { "🧜🏼‍♀️" },
	{ "🧜🏽‍♀️" }, { "🧜🏽‍♀️" }, { "🧜🏾‍♀️" }, { "🧜🏾‍♀️" }, { "🧜🏿‍♀️" }, { "🧜🏿‍♀️" }, { "🧜‍♂️" },
	{ "🧜🏻‍♂️" }, { "🧜🏻‍♂️" }, { "🧜🏼‍♂️" }, { "🧜🏼‍♂️" }, { "🧜🏽‍♂️" }, { "🧜🏽‍♂️" }, { "🧜🏾‍♂️" },
	{ "🧜🏾‍♂️" }, { "🧜🏿‍♂️" }, { "🧜🏿‍♂️" }, { "🧚" }, { "🧚🏻" }, { "🧚🏻" }, { "🧚🏼" }, { "🧚🏼" }, { "🧚🏽" }, { "🧚🏽" }, { "🧚🏾" },
	{ "🧚🏾" }, { "🧚🏿" }, { "🧚🏿" }, { "🧚‍♀️" }, { "🧚🏻‍♀️" }, { "🧚🏻‍♀️" }, { "🧚🏼‍♀️" }, { "🧚🏼‍♀️" },
	{ "🧚🏽‍♀️" }, { "🧚🏽‍♀️" }, { "🧚🏾‍♀️" }, { "🧚🏾‍♀️" }, { "🧚🏿‍♀️" }, { "🧚🏿‍♀️" }, { "🧚‍♂️" },
	{ "🧚🏻‍♂️" }, { "🧚🏻‍♂️" }, { "🧚🏼‍♂️" }, { "🧚🏼‍♂️" }, { "🧚🏽‍♂️" }, { "🧚🏽‍♂️" }, { "🧚🏾‍♂️" },
	{ "🧚🏾‍♂️" }, { "🧚🏿‍♂️" }, { "🧚🏿‍♂️" }, { "👼" }, { "👼" }, { "👼🏻" }, { "👼🏼" }, { "👼🏽" }, { "👼🏾" }, { "👼🏿" }, { "🫄" }, { "🫄🏻" },
	{ "🫄🏻" }, { "🫄🏼" }, { "🫄🏼" }, { "🫄🏽" }, { "🫄🏽" }, { "🫄🏾" }, { "🫄🏾" }, { "🫄🏿" }, { "🫄🏿" }, { "🤰" }, { "🤰" }, { "🤰🏻" }, { "🤰🏻" }, { "🤰🏼" }, { "🤰🏼" },
	{ "🤰🏽" }, { "🤰🏽" }, { "🤰🏾" }, { "🤰🏾" }, { "🤰🏿" }, { "🤰🏿" }, { "🫃" }, { "🫃🏻" }, { "🫃🏻" }, { "🫃🏼" }, { "🫃🏼" }, { "🫃🏽" }, { "🫃🏽" }, { "🫃🏾" },
	{ "🫃🏾" }, { "🫃🏿" }, { "🫃🏿" }, { "🤱" }, { "🤱🏻" }, { "🤱🏻" }, { "🤱🏼" }, { "🤱🏼" }, { "🤱🏽" }, { "🤱🏽" }, { "🤱🏾" }, { "🤱🏾" }, { "🤱🏿" }, { "🤱🏿" },
	{ "🧑‍🍼" }, { "🧑🏻‍🍼" }, { "🧑🏻‍🍼" }, { "🧑🏼‍🍼" }, { "🧑🏼‍🍼" }, { "🧑🏽‍🍼" }, { "🧑🏽‍🍼" },
	{ "🧑🏾‍🍼" }, { "🧑🏾‍🍼" }, { "🧑🏿‍🍼" }, { "🧑🏿‍🍼" }, { "👩‍🍼" }, { "👩🏻‍🍼" }, { "👩🏻‍🍼" },
	{ "👩🏼‍🍼" }, { "👩🏼‍🍼" }, { "👩🏽‍🍼" }, { "👩🏽‍🍼" }, { "👩🏾‍🍼" }, { "👩🏾‍🍼" }, { "👩🏿‍🍼" },
	{ "👩🏿‍🍼" }, { "👨‍🍼" }, { "👨🏻‍🍼" }, { "👨🏻‍🍼" }, { "👨🏼‍🍼" }, { "👨🏼‍🍼" }, { "👨🏽‍🍼" },
	{ "👨🏽‍🍼" }, { "👨🏾‍🍼" }, { "👨🏾‍🍼" }, { "👨🏿‍🍼" }, { "👨🏿‍🍼" }, { "🙇" }, { "🙇" }, { "🙇🏻" }, { "🙇🏻" }, { "🙇🏼" },
	{ "🙇🏼" }, { "🙇🏽" }, { "🙇🏽" }, { "🙇🏾" }, { "🙇🏾" }, { "🙇🏿" }, { "🙇🏿" }, { "🙇‍♀️" }, { "🙇🏻‍♀️" }, { "🙇🏻‍♀️" },
	{ "🙇🏼‍♀️" }, { "🙇🏼‍♀️" }, { "🙇🏽‍♀️" }, { "🙇🏽‍♀️" }, { "🙇🏾‍♀️" }, { "🙇🏾‍♀️" }, { "🙇🏿‍♀️" },
	{ "🙇🏿‍♀️" }, { "🙇‍♂️" }, { "🙇🏻‍♂️" }, { "🙇🏻‍♂️" }, { "🙇🏼‍♂️" }, { "🙇🏼‍♂️" }, { "🙇🏽‍♂️" },
	{ "🙇🏽‍♂️" }, { "🙇🏾‍♂️" }, { "🙇🏾‍♂️" }, { "🙇🏿‍♂️" }, { "🙇🏿‍♂️" }, { "💁" }, { "💁" }, { "💁🏻" }, { "💁🏻" },
	{ "💁🏼" }, { "💁🏼" }, { "💁🏽" }, { "💁🏽" }, { "💁🏾" }, { "💁🏾" }, { "💁🏿" }, { "💁🏿" }, { "💁‍♀️" }, { "💁🏻‍♀️" }, { "💁🏻‍♀️" },
	{ "💁🏼‍♀️" }, { "💁🏼‍♀️" }, { "💁🏽‍♀️" }, { "💁🏽‍♀️" }, { "💁🏾‍♀️" }, { "💁🏾‍♀️" }, { "💁🏿‍♀️" },
	{ "💁🏿‍♀️" }, { "💁‍♂️" }, { "💁🏻‍♂️" }, { "💁🏻‍♂️" }, { "💁🏼‍♂️" }, { "💁🏼‍♂️" }, { "💁🏽‍♂️" },
	{ "💁🏽‍♂️" }, { "💁🏾‍♂️" }, { "💁🏾‍♂️" }, { "💁🏿‍♂️" }, { "💁🏿‍♂️" }, { "🙅" }, { "🙅" }, { "🙅🏻" }, { "🙅🏻" },
	{ "🙅🏼" }, { "🙅🏼" }, { "🙅🏽" }, { "🙅🏽" }, { "🙅🏾" }, { "🙅🏾" }, { "🙅🏿" }, { "🙅🏿" }, { "🙅‍♀️" }, { "🙅🏻‍♀️" }, { "🙅🏻‍♀️" },
	{ "🙅🏼‍♀️" }, { "🙅🏼‍♀️" }, { "🙅🏽‍♀️" }, { "🙅🏽‍♀️" }, { "🙅🏾‍♀️" }, { "🙅🏾‍♀️" }, { "🙅🏿‍♀️" },
	{ "🙅🏿‍♀️" }, { "🙅‍♂️" }, { "🙅🏻‍♂️" }, { "🙅🏻‍♂️" }, { "🙅🏼‍♂️" }, { "🙅🏼‍♂️" }, { "🙅🏽‍♂️" },
	{ "🙅🏽‍♂️" }, { "🙅🏾‍♂️" }, { "🙅🏾‍♂️" }, { "🙅🏿‍♂️" }, { "🙅🏿‍♂️" }, { "🙆" }, { "🙆🏻" }, { "🙆🏼" }, { "🙆🏽" },
	{ "🙆🏾" }, { "🙆🏿" }, { "🙆‍♀️" }, { "🙆🏻‍♀️" }, { "🙆🏻‍♀️" }, { "🙆🏼‍♀️" }, { "🙆🏼‍♀️" }, { "🙆🏽‍♀️" },
	{ "🙆🏽‍♀️" }, { "🙆🏾‍♀️" }, { "🙆🏾‍♀️" }, { "🙆🏿‍♀️" }, { "🙆🏿‍♀️" }, { "🙆‍♂️" }, { "🙆🏻‍♂️" },
	{ "🙆🏻‍♂️" }, { "🙆🏼‍♂️" }, { "🙆🏼‍♂️" }, { "🙆🏽‍♂️" }, { "🙆🏽‍♂️" }, { "🙆🏾‍♂️" }, { "🙆🏾‍♂️" },
	{ "🙆🏿‍♂️" }, { "🙆🏿‍♂️" }, { "🙋" }, { "🙋" }, { "🙋🏻" }, { "🙋🏻" }, { "🙋🏼" }, { "🙋🏼" }, { "🙋🏽" }, { "🙋🏽" }, { "🙋🏾" }, { "🙋🏾" },
	{ "🙋🏿" }, { "🙋🏿" }, { "🙋‍♀️" }, { "🙋🏻‍♀️" }, { "🙋🏻‍♀️" }, { "🙋🏼‍♀️" }, { "🙋🏼‍♀️" }, { "🙋🏽‍♀️" },
	{ "🙋🏽‍♀️" }, { "🙋🏾‍♀️" }, { "🙋🏾‍♀️" }, { "🙋🏿‍♀️" }, { "🙋🏿‍♀️" }, { "🙋‍♂️" }, { "🙋🏻‍♂️" },
	{ "🙋🏻‍♂️" }, { "🙋🏼‍♂️" }, { "🙋🏼‍♂️" }, { "🙋🏽‍♂️" }, { "🙋🏽‍♂️" }, { "🙋🏾‍♂️" }, { "🙋🏾‍♂️" },
	{ "🙋🏿‍♂️" }, { "🙋🏿‍♂️" }, { "🧏" }, { "🧏🏻" }, { "🧏🏻" }, { "🧏🏼" }, { "🧏🏼" }, { "🧏🏽" }, { "🧏🏽" }, { "🧏🏾" }, { "🧏🏾" }, { "🧏🏿" },
	{ "🧏🏿" }, { "🧏‍♀️" }, { "🧏🏻‍♀️" }, { "🧏🏻‍♀️" }, { "🧏🏼‍♀️" }, { "🧏🏼‍♀️" }, { "🧏🏽‍♀️" },
	{ "🧏🏽‍♀️" }, { "🧏🏾‍♀️" }, { "🧏🏾‍♀️" }, { "🧏🏿‍♀️" }, { "🧏🏿‍♀️" }, { "🧏‍♂️" }, { "🧏🏻‍♂️" },
	{ "🧏🏻‍♂️" }, { "🧏🏼‍♂️" }, { "🧏🏼‍♂️" }, { "🧏🏽‍♂️" }, { "🧏🏽‍♂️" }, { "🧏🏾‍♂️" }, { "🧏🏾‍♂️" },
	{ "🧏🏿‍♂️" }, { "🧏🏿‍♂️" }, { "🤦" }, { "🤦" }, { "🤦" }, { "🤦🏻" }, { "🤦🏻" }, { "🤦🏻" }, { "🤦🏼" }, { "🤦🏼" }, { "🤦🏼" }, { "🤦🏽" }, { "🤦🏽" },
	{ "🤦🏽" }, { "🤦🏾" }, { "🤦🏾" }, { "🤦🏾" }, { "🤦🏿" }, { "🤦🏿" }, { "🤦🏿" }, { "🤦‍♀️" }, { "🤦🏻‍♀️" }, { "🤦🏻‍♀️" },
	{ "🤦🏼‍♀️" }, { "🤦🏼‍♀️" }, { "🤦🏽‍♀️" }, { "🤦🏽‍♀️" }, { "🤦🏾‍♀️" }, { "🤦🏾‍♀️" }, { "🤦🏿‍♀️" },
	{ "🤦🏿‍♀️" }, { "🤦‍♂️" }, { "🤦🏻‍♂️" }, { "🤦🏻‍♂️" }, { "🤦🏼‍♂️" }, { "🤦🏼‍♂️" }, { "🤦🏽‍♂️" },
	{ "🤦🏽‍♂️" }, { "🤦🏾‍♂️" }, { "🤦🏾‍♂️" }, { "🤦🏿‍♂️" }, { "🤦🏿‍♂️" }, { "🤷" }, { "🤷" }, { "🤷🏻" }, { "🤷🏻" },
	{ "🤷🏼" }, { "🤷🏼" }, { "🤷🏽" }, { "🤷🏽" }, { "🤷🏾" }, { "🤷🏾" }, { "🤷🏿" }, { "🤷🏿" }, { "🤷‍♀️" }, { "🤷🏻‍♀️" }, { "🤷🏻‍♀️" },
	{ "🤷🏼‍♀️" }, { "🤷🏼‍♀️" }, { "🤷🏽‍♀️" }, { "🤷🏽‍♀️" }, { "🤷🏾‍♀️" }, { "🤷🏾‍♀️" }, { "🤷🏿‍♀️" },
	{ "🤷🏿‍♀️" }, { "🤷‍♂️" }, { "🤷🏻‍♂️" }, { "🤷🏻‍♂️" }, { "🤷🏼‍♂️" }, { "🤷🏼‍♂️" }, { "🤷🏽‍♂️" },
	{ "🤷🏽‍♂️" }, { "🤷🏾‍♂️" }, { "🤷🏾‍♂️" }, { "🤷🏿‍♂️" }, { "🤷🏿‍♂️" }, { "🙎" }, { "🙎" }, { "🙎🏻" }, { "🙎🏻" },
	{ "🙎🏼" }, { "🙎🏼" }, { "🙎🏽" }, { "🙎🏽" }, { "🙎🏾" }, { "🙎🏾" }, { "🙎🏿" }, { "🙎🏿" }, { "🙎‍♀️" }, { "🙎🏻‍♀️" }, { "🙎🏻‍♀️" },
	{ "🙎🏼‍♀️" }, { "🙎🏼‍♀️" }, { "🙎🏽‍♀️" }, { "🙎🏽‍♀️" }, { "🙎🏾‍♀️" }, { "🙎🏾‍♀️" }, { "🙎🏿‍♀️" },
	{ "🙎🏿‍♀️" }, { "🙎‍♂️" }, { "🙎🏻‍♂️" }, { "🙎🏻‍♂️" }, { "🙎🏼‍♂️" }, { "🙎🏼‍♂️" }, { "🙎🏽‍♂️" },
	{ "🙎🏽‍♂️" }, { "🙎🏾‍♂️" }, { "🙎🏾‍♂️" }, { "🙎🏿‍♂️" }, { "🙎🏿‍♂️" }, { "🙍" }, { "🙍🏻" }, { "🙍🏼" }, { "🙍🏽" },
	{ "🙍🏾" }, { "🙍🏿" }, { "🙍‍♀️" }, { "🙍🏻‍♀️" }, { "🙍🏻‍♀️" }, { "🙍🏼‍♀️" }, { "🙍🏼‍♀️" }, { "🙍🏽‍♀️" },
	{ "🙍🏽‍♀️" }, { "🙍🏾‍♀️" }, { "🙍🏾‍♀️" }, { "🙍🏿‍♀️" }, { "🙍🏿‍♀️" }, { "🙍‍♂️" }, { "🙍🏻‍♂️" },
	{ "🙍🏻‍♂️" }, { "🙍🏼‍♂️" }, { "🙍🏼‍♂️" }, { "🙍🏽‍♂️" }, { "🙍🏽‍♂️" }, { "🙍🏾‍♂️" }, { "🙍🏾‍♂️" },
	{ "🙍🏿‍♂️" }, { "🙍🏿‍♂️" }, { "💇" }, { "💇" }, { "💇🏻" }, { "💇🏻" }, { "💇🏼" }, { "💇🏼" }, { "💇🏽" }, { "💇🏽" }, { "💇🏾" }, { "💇🏾" },
	{ "💇🏿" }, { "💇🏿" }, { "💇‍♀️" }, { "💇🏻‍♀️" }, { "💇🏻‍♀️" }, { "💇🏼‍♀️" }, { "💇🏼‍♀️" }, { "💇🏽‍♀️" },
	{ "💇🏽‍♀️" }, { "💇🏾‍♀️" }, { "💇🏾‍♀️" }, { "💇🏿‍♀️" }, { "💇🏿‍♀️" }, { "💇‍♂️" }, { "💇🏻‍♂️" },
	{ "💇🏻‍♂️" }, { "💇🏼‍♂️" }, { "💇🏼‍♂️" }, { "💇🏽‍♂️" }, { "💇🏽‍♂️" }, { "💇🏾‍♂️" }, { "💇🏾‍♂️" },
	{ "💇🏿‍♂️" }, { "💇🏿‍♂️" }, { "💆" }, { "💆" }, { "💆🏻" }, { "💆🏻" }, { "💆🏼" }, { "💆🏼" }, { "💆🏽" }, { "💆🏽" }, { "💆🏾" }, { "💆🏾" },
	{ "💆🏿" }, { "💆🏿" }, { "💆‍♀️" }, { "💆🏻‍♀️" }, { "💆🏻‍♀️" }, { "💆🏼‍♀️" }, { "💆🏼‍♀️" }, { "💆🏽‍♀️" },
	{ "💆🏽‍♀️" }, { "💆🏾‍♀️" }, { "💆🏾‍♀️" }, { "💆🏿‍♀️" }, { "💆🏿‍♀️" }, { "💆‍♂️" }, { "💆🏻‍♂️" },
	{ "💆🏻‍♂️" }, { "💆🏼‍♂️" }, { "💆🏼‍♂️" }, { "💆🏽‍♂️" }, { "💆🏽‍♂️" }, { "💆🏾‍♂️" }, { "💆🏾‍♂️" },
	{ "💆🏿‍♂️" }, { "💆🏿‍♂️" }, { "🧖" }, { "🧖🏻" }, { "🧖🏻" }, { "🧖🏼" }, { "🧖🏼" }, { "🧖🏽" }, { "🧖🏽" }, { "🧖🏾" }, { "🧖🏾" }, { "🧖🏿" },
	{ "🧖🏿" }, { "🧖‍♀️" }, { "🧖🏻‍♀️" }, { "🧖🏻‍♀️" }, { "🧖🏼‍♀️" }, { "🧖🏼‍♀️" }, { "🧖🏽‍♀️" },
	{ "🧖🏽‍♀️" }, { "🧖🏾‍♀️" }, { "🧖🏾‍♀️" }, { "🧖🏿‍♀️" }, { "🧖🏿‍♀️" }, { "🧖‍♂️" }, { "🧖🏻‍♂️" },
	{ "🧖🏻‍♂️" }, { "🧖🏼‍♂️" }, { "🧖🏼‍♂️" }, { "🧖🏽‍♂️" }, { "🧖🏽‍♂️" }, { "🧖🏾‍♂️" }, { "🧖🏾‍♂️" },
	{ "🧖🏿‍♂️" }, { "🧖🏿‍♂️" }, { "💅" }, { "💅" }, { "💅🏻" }, { "💅🏼" }, { "💅🏽" }, { "💅🏾" }, { "💅🏿" }, { "🤳" }, { "🤳🏻" }, { "🤳🏼" }, { "🤳🏽" },
	{ "🤳🏾" }, { "🤳🏿" }, { "💃" }, { "💃" }, { "💃🏻" }, { "💃🏼" }, { "💃🏽" }, { "💃🏾" }, { "💃🏿" }, { "🕺" }, { "🕺" }, { "🕺🏻" }, { "🕺🏻" }, { "🕺🏼" }, { "🕺🏼" },
	{ "🕺🏽" }, { "🕺🏽" }, { "🕺🏿" }, { "🕺🏿" }, { "🕺🏾" }, { "🕺🏾" }, { "👯" }, { "👯" }, { "👯‍♀️" }, { "👯‍♂️" }, { "🕴️" }, { "🕴️" }, { "🕴🏻" },
	{ "🕴🏻" }, { "🕴🏻" }, { "🕴🏼" }, { "🕴🏼" }, { "🕴🏼" }, { "🕴🏽" }, { "🕴🏽" }, { "🕴🏽" }, { "🕴🏾" }, { "🕴🏾" }, { "🕴🏾" }, { "🕴🏿" }, { "🕴🏿" }, { "🕴🏿" },
	{ "🧑‍🦽" }, { "🧑🏻‍🦽" }, { "🧑🏻‍🦽" }, { "🧑🏼‍🦽" }, { "🧑🏼‍🦽" }, { "🧑🏽‍🦽" }, { "🧑🏽‍🦽" },
	{ "🧑🏾‍🦽" }, { "🧑🏾‍🦽" }, { "🧑🏿‍🦽" }, { "🧑🏿‍🦽" }, { "👩‍🦽" }, { "👩🏻‍🦽" }, { "👩🏻‍🦽" },
	{ "👩🏼‍🦽" }, { "👩🏼‍🦽" }, { "👩🏽‍🦽" }, { "👩🏽‍🦽" }, { "👩🏾‍🦽" }, { "👩🏾‍🦽" }, { "👩🏿‍🦽" },
	{ "👩🏿‍🦽" }, { "👨‍🦽" }, { "👨🏻‍🦽" }, { "👨🏻‍🦽" }, { "👨🏼‍🦽" }, { "👨🏼‍🦽" }, { "👨🏽‍🦽" },
	{ "👨🏽‍🦽" }, { "👨🏾‍🦽" }, { "👨🏾‍🦽" }, { "👨🏿‍🦽" }, { "👨🏿‍🦽" }, { "🧑‍🦼" }, { "🧑🏻‍🦼" },
	{ "🧑🏻‍🦼" }, { "🧑🏼‍🦼" }, { "🧑🏼‍🦼" }, { "🧑🏽‍🦼" }, { "🧑🏽‍🦼" }, { "🧑🏾‍🦼" }, { "🧑🏾‍🦼" },
	{ "🧑🏿‍🦼" }, { "🧑🏿‍🦼" }, { "👩‍🦼" }, { "👩🏻‍🦼" }, { "👩🏻‍🦼" }, { "👩🏼‍🦼" }, { "👩🏼‍🦼" },
	{ "👩🏽‍🦼" }, { "👩🏽‍🦼" }, { "👩🏾‍🦼" }, { "👩🏾‍🦼" }, { "👩🏿‍🦼" }, { "👩🏿‍🦼" }, { "👨‍🦼" },
	{ "👨🏻‍🦼" }, { "👨🏻‍🦼" }, { "👨🏼‍🦼" }, { "👨🏼‍🦼" }, { "👨🏽‍🦼" }, { "👨🏽‍🦼" }, { "👨🏾‍🦼" },
	{ "👨🏾‍🦼" }, { "👨🏿‍🦼" }, { "👨🏿‍🦼" }, { "🚶" }, { "🚶" }, { "🚶🏻" }, { "🚶🏻" }, { "🚶🏼" }, { "🚶🏼" }, { "🚶🏽" }, { "🚶🏽" }, { "🚶🏾" },
	{ "🚶🏾" }, { "🚶🏿" }, { "🚶🏿" }, { "🚶‍♀️" }, { "🚶🏻‍♀️" }, { "🚶🏻‍♀️" }, { "🚶🏼‍♀️" }, { "🚶🏼‍♀️" },
	{ "🚶🏽‍♀️" }, { "🚶🏽‍♀️" }, { "🚶🏾‍♀️" }, { "🚶🏾‍♀️" }, { "🚶🏿‍♀️" }, { "🚶🏿‍♀️" }, { "🚶‍♂️" },
	{ "🚶🏻‍♂️" }, { "🚶🏻‍♂️" }, { "🚶🏼‍♂️" }, { "🚶🏼‍♂️" }, { "🚶🏽‍♂️" }, { "🚶🏽‍♂️" }, { "🚶🏾‍♂️" },
	{ "🚶🏾‍♂️" }, { "🚶🏿‍♂️" }, { "🚶🏿‍♂️" }, { "🧑‍🦯" }, { "🧑🏻‍🦯" }, { "🧑🏻‍🦯" }, { "🧑🏼‍🦯" },
	{ "🧑🏼‍🦯" }, { "🧑🏽‍🦯" }, { "🧑🏽‍🦯" }, { "🧑🏾‍🦯" }, { "🧑🏾‍🦯" }, { "🧑🏿‍🦯" }, { "🧑🏿‍🦯" },
	{ "👩‍🦯" }, { "👩🏻‍🦯" }, { "👩🏻‍🦯" }, { "👩🏼‍🦯" }, { "👩🏼‍🦯" }, { "👩🏽‍🦯" }, { "👩🏽‍🦯" },
	{ "👩🏾‍🦯" }, { "👩🏾‍🦯" }, { "👩🏿‍🦯" }, { "👩🏿‍🦯" }, { "👨‍🦯" }, { "👨🏻‍🦯" }, { "👨🏻‍🦯" },
	{ "👨🏼‍🦯" }, { "👨🏼‍🦯" }, { "👨🏽‍🦯" }, { "👨🏽‍🦯" }, { "👨🏾‍🦯" }, { "👨🏾‍🦯" }, { "👨🏿‍🦯" },
	{ "👨🏿‍🦯" }, { "🧎" }, { "🧎🏻" }, { "🧎🏻" }, { "🧎🏼" }, { "🧎🏼" }, { "🧎🏽" }, { "🧎🏽" }, { "🧎🏾" }, { "🧎🏾" }, { "🧎🏿" }, { "🧎🏿" }, { "🧎‍♀️" },
	{ "🧎🏻‍♀️" }, { "🧎🏻‍♀️" }, { "🧎🏼‍♀️" }, { "🧎🏼‍♀️" }, { "🧎🏽‍♀️" }, { "🧎🏽‍♀️" }, { "🧎🏾‍♀️" },
	{ "🧎🏾‍♀️" }, { "🧎🏿‍♀️" }, { "🧎🏿‍♀️" }, { "🧎‍♂️" }, { "🧎🏻‍♂️" }, { "🧎🏻‍♂️" }, { "🧎🏼‍♂️" },
	{ "🧎🏼‍♂️" }, { "🧎🏽‍♂️" }, { "🧎🏽‍♂️" }, { "🧎🏾‍♂️" }, { "🧎🏾‍♂️" }, { "🧎🏿‍♂️" }, { "🧎🏿‍♂️" },
	{ "🏃" }, { "🏃" }, { "🏃🏻" }, { "🏃🏻" }, { "🏃🏼" }, { "🏃🏼" }, { "🏃🏽" }, { "🏃🏽" }, { "🏃🏾" }, { "🏃🏾" }, { "🏃🏿" }, { "🏃🏿" }, { "🏃‍♀️" },
	{ "🏃🏻‍♀️" }, { "🏃🏻‍♀️" }, { "🏃🏼‍♀️" }, { "🏃🏼‍♀️" }, { "🏃🏽‍♀️" }, { "🏃🏽‍♀️" }, { "🏃🏾‍♀️" },
	{ "🏃🏾‍♀️" }, { "🏃🏿‍♀️" }, { "🏃🏿‍♀️" }, { "🏃‍♂️" }, { "🏃🏻‍♂️" }, { "🏃🏻‍♂️" }, { "🏃🏼‍♂️" },
	{ "🏃🏼‍♂️" }, { "🏃🏽‍♂️" }, { "🏃🏽‍♂️" }, { "🏃🏾‍♂️" }, { "🏃🏾‍♂️" }, { "🏃🏿‍♂️" }, { "🏃🏿‍♂️" },
	{ "🧍" }, { "🧍🏻" }, { "🧍🏻" }, { "🧍🏼" }, { "🧍🏼" }, { "🧍🏽" }, { "🧍🏽" }, { "🧍🏾" }, { "🧍🏾" }, { "🧍🏿" }, { "🧍🏿" }, { "🧍‍♀️" }, { "🧍🏻‍♀️" },
	{ "🧍🏻‍♀️" }, { "🧍🏼‍♀️" }, { "🧍🏼‍♀️" }, { "🧍🏽‍♀️" }, { "🧍🏽‍♀️" }, { "🧍🏾‍♀️" }, { "🧍🏾‍♀️" },
	{ "🧍🏿‍♀️" }, { "🧍🏿‍♀️" }, { "🧍‍♂️" }, { "🧍🏻‍♂️" }, { "🧍🏻‍♂️" }, { "🧍🏼‍♂️" }, { "🧍🏼‍♂️" },
	{ "🧍🏽‍♂️" }, { "🧍🏽‍♂️" }, { "🧍🏾‍♂️" }, { "🧍🏾‍♂️" }, { "🧍🏿‍♂️" }, { "🧍🏿‍♂️" }, { "🧑‍🤝‍🧑" },
	{ "🧑🏻‍🤝‍🧑🏻" }, { "🧑🏻‍🤝‍🧑🏻" }, { "🧑🏻‍🤝‍🧑🏼" }, { "🧑🏻‍🤝‍🧑🏼" }, { "🧑🏻‍🤝‍🧑🏽" },
	{ "🧑🏻‍🤝‍🧑🏽" }, { "🧑🏻‍🤝‍🧑🏾" }, { "🧑🏻‍🤝‍🧑🏾" }, { "🧑🏻‍🤝‍🧑🏿" }, { "🧑🏻‍🤝‍🧑🏿" },
	{ "🧑🏼‍🤝‍🧑🏻" }, { "🧑🏼‍🤝‍🧑🏻" }, { "🧑🏼‍🤝‍🧑🏼" }, { "🧑🏼‍🤝‍🧑🏼" }, { "🧑🏼‍🤝‍🧑🏽" },
	{ "🧑🏼‍🤝‍🧑🏽" }, { "🧑🏼‍🤝‍🧑🏾" }, { "🧑🏼‍🤝‍🧑🏾" }, { "🧑🏼‍🤝‍🧑🏿" }, { "🧑🏼‍🤝‍🧑🏿" },
	{ "🧑🏽‍🤝‍🧑🏻" }, { "🧑🏽‍🤝‍🧑🏻" }, { "🧑🏽‍🤝‍🧑🏼" }, { "🧑🏽‍🤝‍🧑🏼" }, { "🧑🏽‍🤝‍🧑🏽" },
	{ "🧑🏽‍🤝‍🧑🏽" }, { "🧑🏽‍🤝‍🧑🏾" }, { "🧑🏽‍🤝‍🧑🏾" }, { "🧑🏽‍🤝‍🧑🏿" }, { "🧑🏽‍🤝‍🧑🏿" },
	{ "🧑🏾‍🤝‍🧑🏻" }, { "🧑🏾‍🤝‍🧑🏻" }, { "🧑🏾‍🤝‍🧑🏼" }, { "🧑🏾‍🤝‍🧑🏼" }, { "🧑🏾‍🤝‍🧑🏽" },
	{ "🧑🏾‍🤝‍🧑🏽" }, { "🧑🏾‍🤝‍🧑🏾" }, { "🧑🏾‍🤝‍🧑🏾" }, { "🧑🏾‍🤝‍🧑🏿" }, { "🧑🏾‍🤝‍🧑🏿" },
	{ "🧑🏿‍🤝‍🧑🏻" }, { "🧑🏿‍🤝‍🧑🏻" }, { "🧑🏿‍🤝‍🧑🏼" }, { "🧑🏿‍🤝‍🧑🏼" }, { "🧑🏿‍🤝‍🧑🏽" },
	{ "🧑🏿‍🤝‍🧑🏽" }, { "🧑🏿‍🤝‍🧑🏾" }, { "🧑🏿‍🤝‍🧑🏾" }, { "🧑🏿‍🤝‍🧑🏿" }, { "🧑🏿‍🤝‍🧑🏿" },
	{ "👫" }, { "👫🏻" }, { "👫🏻" }, { "👩🏻‍🤝‍👨🏼" }, { "👩🏻‍🤝‍👨🏼" }, { "👩🏻‍🤝‍👨🏽" }, { "👩🏻‍🤝‍👨🏽" },
	{ "👩🏻‍🤝‍👨🏾" }, { "👩🏻‍🤝‍👨🏾" }, { "👩🏻‍🤝‍👨🏿" }, { "👩🏻‍🤝‍👨🏿" }, { "👩🏼‍🤝‍👨🏻" },
	{ "👩🏼‍🤝‍👨🏻" }, { "👫🏼" }, { "👫🏼" }, { "👩🏼‍🤝‍👨🏽" }, { "👩🏼‍🤝‍👨🏽" }, { "👩🏼‍🤝‍👨🏾" },
	{ "👩🏼‍🤝‍👨🏾" }, { "👩🏼‍🤝‍👨🏿" }, { "👩🏼‍🤝‍👨🏿" }, { "👩🏽‍🤝‍👨🏻" }, { "👩🏽‍🤝‍👨🏻" },
	{ "👩🏽‍🤝‍👨🏼" }, { "👩🏽‍🤝‍👨🏼" }, { "👫🏽" }, { "👫🏽" }, { "👩🏽‍🤝‍👨🏾" }, { "👩🏽‍🤝‍👨🏾" },
	{ "👩🏽‍🤝‍👨🏿" }, { "👩🏽‍🤝‍👨🏿" }, { "👩🏾‍🤝‍👨🏻" }, { "👩🏾‍🤝‍👨🏻" }, { "👩🏾‍🤝‍👨🏼" },
	{ "👩🏾‍🤝‍👨🏼" }, { "👩🏾‍🤝‍👨🏽" }, { "👩🏾‍🤝‍👨🏽" }, { "👫🏾" }, { "👫🏾" }, { "👩🏾‍🤝‍👨🏿" },
	{ "👩🏾‍🤝‍👨🏿" }, { "👩🏿‍🤝‍👨🏻" }, { "👩🏿‍🤝‍👨🏻" }, { "👩🏿‍🤝‍👨🏼" }, { "👩🏿‍🤝‍👨🏼" },
	{ "👩🏿‍🤝‍👨🏽" }, { "👩🏿‍🤝‍👨🏽" }, { "👩🏿‍🤝‍👨🏾" }, { "👩🏿‍🤝‍👨🏾" }, { "👫🏿" }, { "👫🏿" }, { "👭" },
	{ "👭🏻" }, { "👭🏻" }, { "👩🏻‍🤝‍👩🏼" }, { "👩🏻‍🤝‍👩🏼" }, { "👩🏻‍🤝‍👩🏽" }, { "👩🏻‍🤝‍👩🏽" },
	{ "👩🏻‍🤝‍👩🏾" }, { "👩🏻‍🤝‍👩🏾" }, { "👩🏻‍🤝‍👩🏿" }, { "👩🏻‍🤝‍👩🏿" }, { "👩🏼‍🤝‍👩🏻" },
	{ "👩🏼‍🤝‍👩🏻" }, { "👭🏼" }, { "👭🏼" }, { "👩🏼‍🤝‍👩🏽" }, { "👩🏼‍🤝‍👩🏽" }, { "👩🏼‍🤝‍👩🏾" },
	{ "👩🏼‍🤝‍👩🏾" }, { "👩🏼‍🤝‍👩🏿" }, { "👩🏼‍🤝‍👩🏿" }, { "👩🏽‍🤝‍👩🏻" }, { "👩🏽‍🤝‍👩🏻" },
	{ "👩🏽‍🤝‍👩🏼" }, { "👩🏽‍🤝‍👩🏼" }, { "👭🏽" }, { "👭🏽" }, { "👩🏽‍🤝‍👩🏾" }, { "👩🏽‍🤝‍👩🏾" },
	{ "👩🏽‍🤝‍👩🏿" }, { "👩🏽‍🤝‍👩🏿" }, { "👩🏾‍🤝‍👩🏻" }, { "👩🏾‍🤝‍👩🏻" }, { "👩🏾‍🤝‍👩🏼" },
	{ "👩🏾‍🤝‍👩🏼" }, { "👩🏾‍🤝‍👩🏽" }, { "👩🏾‍🤝‍👩🏽" }, { "👭🏾" }, { "👭🏾" }, { "👩🏾‍🤝‍👩🏿" },
	{ "👩🏾‍🤝‍👩🏿" }, { "👩🏿‍🤝‍👩🏻" }, { "👩🏿‍🤝‍👩🏻" }, { "👩🏿‍🤝‍👩🏼" }, { "👩🏿‍🤝‍👩🏼" },
	{ "👩🏿‍🤝‍👩🏽" }, { "👩🏿‍🤝‍👩🏽" }, { "👩🏿‍🤝‍👩🏾" }, { "👩🏿‍🤝‍👩🏾" }, { "👭🏿" }, { "👭🏿" }, { "👬" },
	{ "👬🏻" }, { "👬🏻" }, { "👨🏻‍🤝‍👨🏼" }, { "👨🏻‍🤝‍👨🏼" }, { "👨🏻‍🤝‍👨🏽" }, { "👨🏻‍🤝‍👨🏽" },
	{ "👨🏻‍🤝‍👨🏾" }, { "👨🏻‍🤝‍👨🏾" }, { "👨🏻‍🤝‍👨🏿" }, { "👨🏻‍🤝‍👨🏿" }, { "👨🏼‍🤝‍👨🏻" },
	{ "👨🏼‍🤝‍👨🏻" }, { "👬🏼" }, { "👬🏼" }, { "👨🏼‍🤝‍👨🏽" }, { "👨🏼‍🤝‍👨🏽" }, { "👨🏼‍🤝‍👨🏾" },
	{ "👨🏼‍🤝‍👨🏾" }, { "👨🏼‍🤝‍👨🏿" }, { "👨🏼‍🤝‍👨🏿" }, { "👨🏽‍🤝‍👨🏻" }, { "👨🏽‍🤝‍👨🏻" },
	{ "👨🏽‍🤝‍👨🏼" }, { "👨🏽‍🤝‍👨🏼" }, { "👬🏽" }, { "👬🏽" }, { "👨🏽‍🤝‍👨🏾" }, { "👨🏽‍🤝‍👨🏾" },
	{ "👨🏽‍🤝‍👨🏿" }, { "👨🏽‍🤝‍👨🏿" }, { "👨🏾‍🤝‍👨🏻" }, { "👨🏾‍🤝‍👨🏻" }, { "👨🏾‍🤝‍👨🏼" },
	{ "👨🏾‍🤝‍👨🏼" }, { "👨🏾‍🤝‍👨🏽" }, { "👨🏾‍🤝‍👨🏽" }, { "👬🏾" }, { "👬🏾" }, { "👨🏾‍🤝‍👨🏿" },
	{ "👨🏾‍🤝‍👨🏿" }, { "👨🏿‍🤝‍👨🏻" }, { "👨🏿‍🤝‍👨🏻" }, { "👨🏿‍🤝‍👨🏼" }, { "👨🏿‍🤝‍👨🏼" },
	{ "👨🏿‍🤝‍👨🏽" }, { "👨🏿‍🤝‍👨🏽" }, { "👨🏿‍🤝‍👨🏾" }, { "👨🏿‍🤝‍👨🏾" }, { "👬🏿" }, { "👬🏿" }, { "💑" },
	{ "💑🏻" }, { "💑🏻" }, { "🧑🏻‍❤️‍🧑🏼" }, { "🧑🏻‍❤️‍🧑🏼" }, { "🧑🏻‍❤️‍🧑🏽" }, { "🧑🏻‍❤️‍🧑🏽" },
	{ "🧑🏻‍❤️‍🧑🏾" }, { "🧑🏻‍❤️‍🧑🏾" }, { "🧑🏻‍❤️‍🧑🏿" }, { "🧑🏻‍❤️‍🧑🏿" },
	{ "🧑🏼‍❤️‍🧑🏻" }, { "🧑🏼‍❤️‍🧑🏻" }, { "💑🏼" }, { "💑🏼" }, { "🧑🏼‍❤️‍🧑🏽" }, { "🧑🏼‍❤️‍🧑🏽" },
	{ "🧑🏼‍❤️‍🧑🏾" }, { "🧑🏼‍❤️‍🧑🏾" }, { "🧑🏼‍❤️‍🧑🏿" }, { "🧑🏼‍❤️‍🧑🏿" },
	{ "🧑🏽‍❤️‍🧑🏻" }, { "🧑🏽‍❤️‍🧑🏻" }, { "🧑🏽‍❤️‍🧑🏼" }, { "🧑🏽‍❤️‍🧑🏼" }, { "💑🏽" }, { "💑🏽" },
	{ "🧑🏽‍❤️‍🧑🏾" }, { "🧑🏽‍❤️‍🧑🏾" }, { "🧑🏽‍❤️‍🧑🏿" }, { "🧑🏽‍❤️‍🧑🏿" },
	{ "🧑🏾‍❤️‍🧑🏻" }, { "🧑🏾‍❤️‍🧑🏻" }, { "🧑🏾‍❤️‍🧑🏼" }, { "🧑🏾‍❤️‍🧑🏼" },
	{ "🧑🏾‍❤️‍🧑🏽" }, { "🧑🏾‍❤️‍🧑🏽" }, { "💑🏾" }, { "💑🏾" }, { "🧑🏾‍❤️‍🧑🏿" }, { "🧑🏾‍❤️‍🧑🏿" },
	{ "🧑🏿‍❤️‍🧑🏻" }, { "🧑🏿‍❤️‍🧑🏻" }, { "🧑🏿‍❤️‍🧑🏼" }, { "🧑🏿‍❤️‍🧑🏼" },
	{ "🧑🏿‍❤️‍🧑🏽" }, { "🧑🏿‍❤️‍🧑🏽" }, { "🧑🏿‍❤️‍🧑🏾" }, { "🧑🏿‍❤️‍🧑🏾" }, { "💑🏿" }, { "💑🏿" },
	{ "👩‍❤️‍👨" }, { "👩🏻‍❤️‍👨🏻" }, { "👩🏻‍❤️‍👨🏻" }, { "👩🏻‍❤️‍👨🏼" }, { "👩🏻‍❤️‍👨🏼" },
	{ "👩🏻‍❤️‍👨🏽" }, { "👩🏻‍❤️‍👨🏽" }, { "👩🏻‍❤️‍👨🏾" }, { "👩🏻‍❤️‍👨🏾" },
	{ "👩🏻‍❤️‍👨🏿" }, { "👩🏻‍❤️‍👨🏿" }, { "👩🏼‍❤️‍👨🏻" }, { "👩🏼‍❤️‍👨🏻" },
	{ "👩🏼‍❤️‍👨🏼" }, { "👩🏼‍❤️‍👨🏼" }, { "👩🏼‍❤️‍👨🏽" }, { "👩🏼‍❤️‍👨🏽" },
	{ "👩🏼‍❤️‍👨🏾" }, { "👩🏼‍❤️‍👨🏾" }, { "👩🏼‍❤️‍👨🏿" }, { "👩🏼‍❤️‍👨🏿" },
	{ "👩🏽‍❤️‍👨🏻" }, { "👩🏽‍❤️‍👨🏻" }, { "👩🏽‍❤️‍👨🏼" }, { "👩🏽‍❤️‍👨🏼" },
	{ "👩🏽‍❤️‍👨🏽" }, { "👩🏽‍❤️‍👨🏽" }, { "👩🏽‍❤️‍👨🏾" }, { "👩🏽‍❤️‍👨🏾" },
	{ "👩🏽‍❤️‍👨🏿" }, { "👩🏽‍❤️‍👨🏿" }, { "👩🏾‍❤️‍👨🏻" }, { "👩🏾‍❤️‍👨🏻" },
	{ "👩🏾‍❤️‍👨🏼" }, { "👩🏾‍❤️‍👨🏼" }, { "👩🏾‍❤️‍👨🏽" }, { "👩🏾‍❤️‍👨🏽" },
	{ "👩🏾‍❤️‍👨🏾" }, { "👩🏾‍❤️‍👨🏾" }, { "👩🏾‍❤️‍👨🏿" }, { "👩🏾‍❤️‍👨🏿" },
	{ "👩🏿‍❤️‍👨🏻" }, { "👩🏿‍❤️‍👨🏻" }, { "👩🏿‍❤️‍👨🏼" }, { "👩🏿‍❤️‍👨🏼" },
	{ "👩🏿‍❤️‍👨🏽" }, { "👩🏿‍❤️‍👨🏽" }, { "👩🏿‍❤️‍👨🏾" }, { "👩🏿‍❤️‍👨🏾" },
	{ "👩🏿‍❤️‍👨🏿" }, { "👩🏿‍❤️‍👨🏿" }, { "👩‍❤️‍👩" }, { "👩‍❤️‍👩" }, { "👩🏻‍❤️‍👩🏻" },
	{ "👩🏻‍❤️‍👩🏻" }, { "👩🏻‍❤️‍👩🏼" }, { "👩🏻‍❤️‍👩🏼" }, { "👩🏻‍❤️‍👩🏽" },
	{ "👩🏻‍❤️‍👩🏽" }, { "👩🏻‍❤️‍👩🏾" }, { "👩🏻‍❤️‍👩🏾" }, { "👩🏻‍❤️‍👩🏿" },
	{ "👩🏻‍❤️‍👩🏿" }, { "👩🏼‍❤️‍👩🏻" }, { "👩🏼‍❤️‍👩🏻" }, { "👩🏼‍❤️‍👩🏼" },
	{ "👩🏼‍❤️‍👩🏼" }, { "👩🏼‍❤️‍👩🏽" }, { "👩🏼‍❤️‍👩🏽" }, { "👩🏼‍❤️‍👩🏾" },
	{ "👩🏼‍❤️‍👩🏾" }, { "👩🏼‍❤️‍👩🏿" }, { "👩🏼‍❤️‍👩🏿" }, { "👩🏽‍❤️‍👩🏻" },
	{ "👩🏽‍❤️‍👩🏻" }, { "👩🏽‍❤️‍👩🏼" }, { "👩🏽‍❤️‍👩🏼" }, { "👩🏽‍❤️‍👩🏽" },
	{ "👩🏽‍❤️‍👩🏽" }, { "👩🏽‍❤️‍👩🏾" }, { "👩🏽‍❤️‍👩🏾" }, { "👩🏽‍❤️‍👩🏿" },
	{ "👩🏽‍❤️‍👩🏿" }, { "👩🏾‍❤️‍👩🏻" }, { "👩🏾‍❤️‍👩🏻" }, { "👩🏾‍❤️‍👩🏼" },
	{ "👩🏾‍❤️‍👩🏼" }, { "👩🏾‍❤️‍👩🏽" }, { "👩🏾‍❤️‍👩🏽" }, { "👩🏾‍❤️‍👩🏾" },
	{ "👩🏾‍❤️‍👩🏾" }, { "👩🏾‍❤️‍👩🏿" }, { "👩🏾‍❤️‍👩🏿" }, { "👩🏿‍❤️‍👩🏻" },
	{ "👩🏿‍❤️‍👩🏻" }, { "👩🏿‍❤️‍👩🏼" }, { "👩🏿‍❤️‍👩🏼" }, { "👩🏿‍❤️‍👩🏽" },
	{ "👩🏿‍❤️‍👩🏽" }, { "👩🏿‍❤️‍👩🏾" }, { "👩🏿‍❤️‍👩🏾" }, { "👩🏿‍❤️‍👩🏿" },
	{ "👩🏿‍❤️‍👩🏿" }, { "👨‍❤️‍👨" }, { "👨‍❤️‍👨" }, { "👨🏻‍❤️‍👨🏻" }, { "👨🏻‍❤️‍👨🏻" },
	{ "👨🏻‍❤️‍👨🏼" }, { "👨🏻‍❤️‍👨🏼" }, { "👨🏻‍❤️‍👨🏽" }, { "👨🏻‍❤️‍👨🏽" },
	{ "👨🏻‍❤️‍👨🏾" }, { "👨🏻‍❤️‍👨🏾" }, { "👨🏻‍❤️‍👨🏿" }, { "👨🏻‍❤️‍👨🏿" },
	{ "👨🏼‍❤️‍👨🏻" }, { "👨🏼‍❤️‍👨🏻" }, { "👨🏼‍❤️‍👨🏼" }, { "👨🏼‍❤️‍👨🏼" },
	{ "👨🏼‍❤️‍👨🏽" }, { "👨🏼‍❤️‍👨🏽" }, { "👨🏼‍❤️‍👨🏾" }, { "👨🏼‍❤️‍👨🏾" },
	{ "👨🏼‍❤️‍👨🏿" }, { "👨🏼‍❤️‍👨🏿" }, { "👨🏽‍❤️‍👨🏻" }, { "👨🏽‍❤️‍👨🏻" },
	{ "👨🏽‍❤️‍👨🏼" }, { "👨🏽‍❤️‍👨🏼" }, { "👨🏽‍❤️‍👨🏽" }, { "👨🏽‍❤️‍👨🏽" },
	{ "👨🏽‍❤️‍👨🏾" }, { "👨🏽‍❤️‍👨🏾" }, { "👨🏽‍❤️‍👨🏿" }, { "👨🏽‍❤️‍👨🏿" },
	{ "👨🏾‍❤️‍👨🏻" }, { "👨🏾‍❤️‍👨🏻" }, { "👨🏾‍❤️‍👨🏼" }, { "👨🏾‍❤️‍👨🏼" },
	{ "👨🏾‍❤️‍👨🏽" }, { "👨🏾‍❤️‍👨🏽" }, { "👨🏾‍❤️‍👨🏾" }, { "👨🏾‍❤️‍👨🏾" },
	{ "👨🏾‍❤️‍👨🏿" }, { "👨🏾‍❤️‍👨🏿" }, { "👨🏿‍❤️‍👨🏻" }, { "👨🏿‍❤️‍👨🏻" },
	{ "👨🏿‍❤️‍👨🏼" }, { "👨🏿‍❤️‍👨🏼" }, { "👨🏿‍❤️‍👨🏽" }, { "👨🏿‍❤️‍👨🏽" },
	{ "👨🏿‍❤️‍👨🏾" }, { "👨🏿‍❤️‍👨🏾" }, { "👨🏿‍❤️‍👨🏿" }, { "👨🏿‍❤️‍👨🏿" }, { "💏" }, { "💏🏻" },
	{ "💏🏻" }, { "🧑🏻‍❤️‍💋‍🧑🏼" }, { "🧑🏻‍❤️‍💋‍🧑🏼" }, { "🧑🏻‍❤️‍💋‍🧑🏽" },
	{ "🧑🏻‍❤️‍💋‍🧑🏽" }, { "🧑🏻‍❤️‍💋‍🧑🏾" }, { "🧑🏻‍❤️‍💋‍🧑🏾" }, { "🧑🏻‍❤️‍💋‍🧑🏿" },
	{ "🧑🏻‍❤️‍💋‍🧑🏿" }, { "🧑🏼‍❤️‍💋‍🧑🏻" }, { "🧑🏼‍❤️‍💋‍🧑🏻" }, { "💏🏼" }, { "💏🏼" },
	{ "🧑🏼‍❤️‍💋‍🧑🏽" }, { "🧑🏼‍❤️‍💋‍🧑🏽" }, { "🧑🏼‍❤️‍💋‍🧑🏾" }, { "🧑🏼‍❤️‍💋‍🧑🏾" },
	{ "🧑🏼‍❤️‍💋‍🧑🏿" }, { "🧑🏼‍❤️‍💋‍🧑🏿" }, { "🧑🏽‍❤️‍💋‍🧑🏻" }, { "🧑🏽‍❤️‍💋‍🧑🏻" },
	{ "🧑🏽‍❤️‍💋‍🧑🏼" }, { "🧑🏽‍❤️‍💋‍🧑🏼" }, { "💏🏽" }, { "💏🏽" }, { "🧑🏽‍❤️‍💋‍🧑🏾" },
	{ "🧑🏽‍❤️‍💋‍🧑🏾" }, { "🧑🏽‍❤️‍💋‍🧑🏿" }, { "🧑🏽‍❤️‍💋‍🧑🏿" }, { "🧑🏾‍❤️‍💋‍🧑🏻" },
	{ "🧑🏾‍❤️‍💋‍🧑🏻" }, { "🧑🏾‍❤️‍💋‍🧑🏼" }, { "🧑🏾‍❤️‍💋‍🧑🏼" }, { "🧑🏾‍❤️‍💋‍🧑🏽" },
	{ "🧑🏾‍❤️‍💋‍🧑🏽" }, { "💏🏾" }, { "💏🏾" }, { "🧑🏾‍❤️‍💋‍🧑🏿" }, { "🧑🏾‍❤️‍💋‍🧑🏿" },
	{ "🧑🏿‍❤️‍💋‍🧑🏻" }, { "🧑🏿‍❤️‍💋‍🧑🏻" }, { "🧑🏿‍❤️‍💋‍🧑🏼" }, { "🧑🏿‍❤️‍💋‍🧑🏼" },
	{ "🧑🏿‍❤️‍💋‍🧑🏽" }, { "🧑🏿‍❤️‍💋‍🧑🏽" }, { "🧑🏿‍❤️‍💋‍🧑🏾" }, { "🧑🏿‍❤️‍💋‍🧑🏾" },
	{ "💏🏿" }, { "💏🏿" }, { "👩‍❤️‍💋‍👨" }, { "👩🏻‍❤️‍💋‍👨🏻" }, { "👩🏻‍❤️‍💋‍👨🏻" },
	{ "👩🏻‍❤️‍💋‍👨🏼" }, { "👩🏻‍❤️‍💋‍👨🏼" }, { "👩🏻‍❤️‍💋‍👨🏽" }, { "👩🏻‍❤️‍💋‍👨🏽" },
	{ "👩🏻‍❤️‍💋‍👨🏾" }, { "👩🏻‍❤️‍💋‍👨🏾" }, { "👩🏻‍❤️‍💋‍👨🏿" }, { "👩🏻‍❤️‍💋‍👨🏿" },
	{ "👩🏼‍❤️‍💋‍👨🏻" }, { "👩🏼‍❤️‍💋‍👨🏻" }, { "👩🏼‍❤️‍💋‍👨🏼" }, { "👩🏼‍❤️‍💋‍👨🏼" },
	{ "👩🏼‍❤️‍💋‍👨🏽" }, { "👩🏼‍❤️‍💋‍👨🏽" }, { "👩🏼‍❤️‍💋‍👨🏾" }, { "👩🏼‍❤️‍💋‍👨🏾" },
	{ "👩🏼‍❤️‍💋‍👨🏿" }, { "👩🏼‍❤️‍💋‍👨🏿" }, { "👩🏽‍❤️‍💋‍👨🏻" }, { "👩🏽‍❤️‍💋‍👨🏻" },
	{ "👩🏽‍❤️‍💋‍👨🏼" }, { "👩🏽‍❤️‍💋‍👨🏼" }, { "👩🏽‍❤️‍💋‍👨🏽" }, { "👩🏽‍❤️‍💋‍👨🏽" },
	{ "👩🏽‍❤️‍💋‍👨🏾" }, { "👩🏽‍❤️‍💋‍👨🏾" }, { "👩🏽‍❤️‍💋‍👨🏿" }, { "👩🏽‍❤️‍💋‍👨🏿" },
	{ "👩🏾‍❤️‍💋‍👨🏻" }, { "👩🏾‍❤️‍💋‍👨🏻" }, { "👩🏾‍❤️‍💋‍👨🏼" }, { "👩🏾‍❤️‍💋‍👨🏼" },
	{ "👩🏾‍❤️‍💋‍👨🏽" }, { "👩🏾‍❤️‍💋‍👨🏽" }, { "👩🏾‍❤️‍💋‍👨🏾" }, { "👩🏾‍❤️‍💋‍👨🏾" },
	{ "👩🏾‍❤️‍💋‍👨🏿" }, { "👩🏾‍❤️‍💋‍👨🏿" }, { "👩🏿‍❤️‍💋‍👨🏻" }, { "👩🏿‍❤️‍💋‍👨🏻" },
	{ "👩🏿‍❤️‍💋‍👨🏼" }, { "👩🏿‍❤️‍💋‍👨🏼" }, { "👩🏿‍❤️‍💋‍👨🏽" }, { "👩🏿‍❤️‍💋‍👨🏽" },
	{ "👩🏿‍❤️‍💋‍👨🏾" }, { "👩🏿‍❤️‍💋‍👨🏾" }, { "👩🏿‍❤️‍💋‍👨🏿" }, { "👩🏿‍❤️‍💋‍👨🏿" },
	{ "👩‍❤️‍💋‍👩" }, { "👩‍❤️‍💋‍👩" }, { "👩🏻‍❤️‍💋‍👩🏻" }, { "👩🏻‍❤️‍💋‍👩🏻" },
	{ "👩🏻‍❤️‍💋‍👩🏼" }, { "👩🏻‍❤️‍💋‍👩🏼" }, { "👩🏻‍❤️‍💋‍👩🏽" }, { "👩🏻‍❤️‍💋‍👩🏽" },
	{ "👩🏻‍❤️‍💋‍👩🏾" }, { "👩🏻‍❤️‍💋‍👩🏾" }, { "👩🏻‍❤️‍💋‍👩🏿" }, { "👩🏻‍❤️‍💋‍👩🏿" },
	{ "👩🏼‍❤️‍💋‍👩🏻" }, { "👩🏼‍❤️‍💋‍👩🏻" }, { "👩🏼‍❤️‍💋‍👩🏼" }, { "👩🏼‍❤️‍💋‍👩🏼" },
	{ "👩🏼‍❤️‍💋‍👩🏽" }, { "👩🏼‍❤️‍💋‍👩🏽" }, { "👩🏼‍❤️‍💋‍👩🏾" }, { "👩🏼‍❤️‍💋‍👩🏾" },
	{ "👩🏼‍❤️‍💋‍👩🏿" }, { "👩🏼‍❤️‍💋‍👩🏿" }, { "👩🏽‍❤️‍💋‍👩🏻" }, { "👩🏽‍❤️‍💋‍👩🏻" },
	{ "👩🏽‍❤️‍💋‍👩🏼" }, { "👩🏽‍❤️‍💋‍👩🏼" }, { "👩🏽‍❤️‍💋‍👩🏽" }, { "👩🏽‍❤️‍💋‍👩🏽" },
	{ "👩🏽‍❤️‍💋‍👩🏾" }, { "👩🏽‍❤️‍💋‍👩🏾" }, { "👩🏽‍❤️‍💋‍👩🏿" }, { "👩🏽‍❤️‍💋‍👩🏿" },
	{ "👩🏾‍❤️‍💋‍👩🏻" }, { "👩🏾‍❤️‍💋‍👩🏻" }, { "👩🏾‍❤️‍💋‍👩🏼" }, { "👩🏾‍❤️‍💋‍👩🏼" },
	{ "👩🏾‍❤️‍💋‍👩🏽" }, { "👩🏾‍❤️‍💋‍👩🏽" }, { "👩🏾‍❤️‍💋‍👩🏾" }, { "👩🏾‍❤️‍💋‍👩🏾" },
	{ "👩🏾‍❤️‍💋‍👩🏿" }, { "👩🏾‍❤️‍💋‍👩🏿" }, { "👩🏿‍❤️‍💋‍👩🏻" }, { "👩🏿‍❤️‍💋‍👩🏻" },
	{ "👩🏿‍❤️‍💋‍👩🏼" }, { "👩🏿‍❤️‍💋‍👩🏼" }, { "👩🏿‍❤️‍💋‍👩🏽" }, { "👩🏿‍❤️‍💋‍👩🏽" },
	{ "👩🏿‍❤️‍💋‍👩🏾" }, { "👩🏿‍❤️‍💋‍👩🏾" }, { "👩🏿‍❤️‍💋‍👩🏿" }, { "👩🏿‍❤️‍💋‍👩🏿" },
	{ "👨‍❤️‍💋‍👨" }, { "👨‍❤️‍💋‍👨" }, { "👨‍❤️‍💋‍👨" }, { "👨🏻‍❤️‍💋‍👨🏻" },
	{ "👨🏻‍❤️‍💋‍👨🏻" }, { "👨🏻‍❤️‍💋‍👨🏼" }, { "👨🏻‍❤️‍💋‍👨🏼" }, { "👨🏻‍❤️‍💋‍👨🏽" },
	{ "👨🏻‍❤️‍💋‍👨🏽" }, { "👨🏻‍❤️‍💋‍👨🏾" }, { "👨🏻‍❤️‍💋‍👨🏾" }, { "👨🏻‍❤️‍💋‍👨🏿" },
	{ "👨🏻‍❤️‍💋‍👨🏿" }, { "👨🏼‍❤️‍💋‍👨🏻" }, { "👨🏼‍❤️‍💋‍👨🏻" }, { "👨🏼‍❤️‍💋‍👨🏼" },
	{ "👨🏼‍❤️‍💋‍👨🏼" }, { "👨🏼‍❤️‍💋‍👨🏽" }, { "👨🏼‍❤️‍💋‍👨🏽" }, { "👨🏼‍❤️‍💋‍👨🏾" },
	{ "👨🏼‍❤️‍💋‍👨🏾" }, { "👨🏼‍❤️‍💋‍👨🏿" }, { "👨🏼‍❤️‍💋‍👨🏿" }, { "👨🏽‍❤️‍💋‍👨🏻" },
	{ "👨🏽‍❤️‍💋‍👨🏻" }, { "👨🏽‍❤️‍💋‍👨🏼" }, { "👨🏽‍❤️‍💋‍👨🏼" }, { "👨🏽‍❤️‍💋‍👨🏽" },
	{ "👨🏽‍❤️‍💋‍👨🏽" }, { "👨🏽‍❤️‍💋‍👨🏾" }, { "👨🏽‍❤️‍💋‍👨🏾" }, { "👨🏽‍❤️‍💋‍👨🏿" },
	{ "👨🏽‍❤️‍💋‍👨🏿" }, { "👨🏾‍❤️‍💋‍👨🏻" }, { "👨🏾‍❤️‍💋‍👨🏻" }, { "👨🏾‍❤️‍💋‍👨🏼" },
	{ "👨🏾‍❤️‍💋‍👨🏼" }, { "👨🏾‍❤️‍💋‍👨🏽" }, { "👨🏾‍❤️‍💋‍👨🏽" }, { "👨🏾‍❤️‍💋‍👨🏾" },
	{ "👨🏾‍❤️‍💋‍👨🏾" }, { "👨🏾‍❤️‍💋‍👨🏿" }, { "👨🏾‍❤️‍💋‍👨🏿" }, { "👨🏿‍❤️‍💋‍👨🏻" },
	{ "👨🏿‍❤️‍💋‍👨🏻" }, { "👨🏿‍❤️‍💋‍👨🏼" }, { "👨🏿‍❤️‍💋‍👨🏼" }, { "👨🏿‍❤️‍💋‍👨🏽" },
	{ "👨🏿‍❤️‍💋‍👨🏽" }, { "👨🏿‍❤️‍💋‍👨🏾" }, { "👨🏿‍❤️‍💋‍👨🏾" }, { "👨🏿‍❤️‍💋‍👨🏿" },
	{ "👨🏿‍❤️‍💋‍👨🏿" }, { "👪" }, { "👨‍👩‍👦" }, { "👨‍👩‍👧" }, { "👨‍👩‍👧‍👦" }, { "👨‍👩‍👦‍👦" },
	{ "👨‍👩‍👧‍👧" }, { "👩‍👩‍👦" }, { "👩‍👩‍👧" }, { "👩‍👩‍👧‍👦" }, { "👩‍👩‍👦‍👦" },
	{ "👩‍👩‍👧‍👧" }, { "👨‍👨‍👦" }, { "👨‍👨‍👧" }, { "👨‍👨‍👧‍👦" }, { "👨‍👨‍👦‍👦" },
	{ "👨‍👨‍👧‍👧" }, { "👩‍👦" }, { "👩‍👧" }, { "👩‍👧‍👦" }, { "👩‍👦‍👦" }, { "👩‍👧‍👧" }, { "👨‍👦" },
	{ "👨‍👧" }, { "👨‍👧‍👦" }, { "👨‍👦‍👦" }, { "👨‍👧‍👧" }, { "🪢" }, { "🧶" }, { "🧵" }, { "🪡" }, { "🧥" }, { "🥼" }, { "🦺" }, { "👚" },
	{ "👕" }, { "👕" }, { "👖" }, { "🩲" }, { "🩳" }, { "👔" }, { "👗" }, { "👙" }, { "🩱" }, { "👘" }, { "🥻" }, { "🩴" }, { "🥿" }, { "🥿" }, { "👠" }, { "👡" }, { "👡" },
	{ "👢" }, { "👢" }, { "👞" }, { "👟" }, { "👟" }, { "🥾" }, { "🧦" }, { "🧤" }, { "🧣" }, { "🎩" }, { "🎩" }, { "🧢" }, { "👒" }, { "🎓" }, { "⛑️" }, { "⛑️" }, { "🪖" },
	{ "👑" }, { "💍" }, { "👝" }, { "👝" }, { "👛" }, { "👜" }, { "💼" }, { "🎒" }, { "🎒" }, { "🧳" }, { "👓" }, { "👓" }, { "🕶️" }, { "🥽" }, { "🌂" }, { "🩷" }, { "❤️" },
	{ "❤️" }, { "🧡" }, { "💛" }, { "💚" }, { "🩵" }, { "💙" }, { "💜" }, { "🖤" }, { "🩶" }, { "🤍" }, { "🤎" }, { "💔" }, { "❣️" }, { "❣️" }, { "💕" }, { "💞" }, { "💓" }, { "💓" },
	{ "💗" }, { "💗" }, { "💖" }, { "💘" }, { "💝" }, { "❤️‍🩹" }, { "❤️‍🔥" }, { "💟" }, { "☮️" }, { "☮️" }, { "✝️" }, { "✝️" }, { "☪️" }, { "🕉️" }, { "☸️" }, { "🪯" },
	{ "✡️" }, { "🔯" }, { "🕎" }, { "☯️" }, { "☦️" }, { "🛐" }, { "🛐" }, { "⛎" }, { "♈" }, { "♉" }, { "♊" }, { "♋" }, { "♌" }, { "♍" }, { "♎" }, { "♏" }, { "♏" }, { "♐" },
	{ "♑" }, { "♒" }, { "♓" }, { "🆔" }, { "⚛️" }, { "⚛️" }, { "🉑" }, { "☢️" }, { "☢️" }, { "☣️" }, { "☣️" }, { "📴" }, { "📳" }, { "🈶" }, { "🈚" }, { "🈸" }, { "🈺" }, { "🈷️" },
	{ "✴️" }, { "🆚" }, { "💮" }, { "🉐" }, { "㊙️" }, { "㊗️" }, { "🈴" }, { "🈵" }, { "🈹" }, { "🈲" }, { "🅰️" }, { "🅱️" }, { "🆎" }, { "🆑" }, { "🅾️" }, { "🆘" }, { "❌" }, { "❌" },
	{ "⭕" }, { "🛑" }, { "🛑" }, { "⛔" }, { "📛" }, { "🚫" }, { "🚫" }, { "💢" }, { "♨️" }, { "♨️" }, { "🚷" }, { "🚯" }, { "🚯" }, { "🚳" }, { "🚱" }, { "🔞" }, { "📵" },
	{ "🚭" }, { "❗" }, { "❕" }, { "❓" }, { "❓" }, { "❔" }, { "‼️" }, { "⁉️" }, { "🔅" }, { "🔆" }, { "〽️" }, { "⚠️" }, { "🚸" }, { "🔱" }, { "⚜️" }, { "🔰" }, { "♻️" }, { "✅" },
	{ "🈯" }, { "💹" }, { "❇️" }, { "✳️" }, { "❎" }, { "🌐" }, { "💠" }, { "Ⓜ️" }, { "Ⓜ️" }, { "🌀" }, { "💤" }, { "🏧" }, { "🚾" }, { "🚾" }, { "♿" }, { "🅿️" }, { "🛗" }, { "🈳" },
	{ "🈂️" }, { "🛂" }, { "🛃" }, { "🛄" }, { "🛅" }, { "🛜" }, { "🚹" }, { "🚹" }, { "🚺" }, { "🚺" }, { "🚼" }, { "🚻" }, { "🚮" }, { "🎦" }, { "📶" }, { "📶" }, { "🈁" },
	{ "🔣" }, { "🔣" }, { "ℹ️" }, { "ℹ️" }, { "🔤" }, { "🔡" }, { "🔠" }, { "🆖" }, { "🆗" }, { "🆙" }, { "🆒" }, { "🆕" }, { "🆓" }, { "0️⃣" }, { "1️⃣" }, { "2️⃣" }, { "3️⃣" }, { "4️⃣" },
	{ "5️⃣" }, { "6️⃣" }, { "7️⃣" }, { "8️⃣" }, { "9️⃣" }, { "🔟" }, { "🔢" }, { "#️⃣" }, { "*️⃣" }, { "*️⃣" }, { "⏏️" }, { "⏏️" }, { "▶️" }, { "⏸️" }, { "⏸️" }, { "⏯️" }, { "⏹️" }, { "⏺️" }, { "⏭️" },
	{ "⏭️" }, { "⏮️" }, { "⏮️" }, { "⏩" }, { "⏪" }, { "⏫" }, { "⏬" }, { "◀️" }, { "🔼" }, { "🔽" }, { "➡️" }, { "➡️" }, { "⬅️" }, { "⬅️" }, { "⬆️" }, { "⬆️" }, { "⬇️" }, { "⬇️" }, { "↗️" },
	{ "↘️" }, { "↙️" }, { "↖️" }, { "↖️" }, { "↕️" }, { "↕️" }, { "↔️" }, { "↪️" }, { "↩️" }, { "⤴️" }, { "⤵️" }, { "🔀" }, { "🔁" }, { "🔂" }, { "🔄" }, { "🔃" }, { "🎵" }, { "🎶" },
	{ "🎶" }, { "➕" }, { "➖" }, { "➗" }, { "✖️" }, { "🟰" }, { "♾️" }, { "💲" }, { "💱" }, { "™️" }, { "™️" }, { "©️" }, { "®️" }, { "〰️" }, { "➰" }, { "➿" }, { "🔚" }, { "🔚" },
	{ "🔙" }, { "🔙" }, { "🔛" }, { "🔛" }, { "🔝" }, { "🔝" }, { "🔜" }, { "🔜" }, { "✔️" }, { "✔️" }, { "☑️" }, { "🔘" }, { "⚪" }, { "⚫" }, { "🔴" }, { "🔵" }, { "🟤" }, { "🟣" },
	{ "🟢" }, { "🟡" }, { "🟠" }, { "🔺" }, { "🔻" }, { "🔸" }, { "🔹" }, { "🔶" }, { "🔷" }, { "🔳" }, { "🔲" }, { "▪️" }, { "▫️" }, { "◾" }, { "◽" }, { "◼️" }, { "◻️" }, { "⬛" },
	{ "⬜" }, { "🟧" }, { "🟦" }, { "🟥" }, { "🟫" }, { "🟪" }, { "🟩" }, { "🟨" }, { "🔈" }, { "🔇" }, { "🔇" }, { "🔉" }, { "🔊" }, { "🔔" }, { "🔕" }, { "📣" }, { "📣" },
	{ "📢" }, { "🗨️" }, { "🗨️" }, { "👁‍🗨" }, { "💬" }, { "💭" }, { "🗯️" }, { "🗯️" }, { "♠️" }, { "♠️" }, { "♣️" }, { "♣️" }, { "♥️" }, { "♥️" }, { "♦️" }, { "♦️" }, { "🃏" },
	{ "🃏" }, { "🎴" }, { "🀄" }, { "🕐" }, { "🕐" }, { "🕑" }, { "🕑" }, { "🕒" }, { "🕒" }, { "🕓" }, { "🕓" }, { "🕔" }, { "🕔" }, { "🕕" }, { "🕕" }, { "🕖" }, { "🕖" },
	{ "🕗" }, { "🕗" }, { "🕘" }, { "🕘" }, { "🕙" }, { "🕙" }, { "🕚" }, { "🕚" }, { "🕛" }, { "🕛" }, { "🕜" }, { "🕜" }, { "🕝" }, { "🕝" }, { "🕞" }, { "🕞" }, { "🕟" },
	{ "🕟" }, { "🕠" }, { "🕠" }, { "🕡" }, { "🕡" }, { "🕢" }, { "🕢" }, { "🕣" }, { "🕣" }, { "🕤" }, { "🕤" }, { "🕥" }, { "🕥" }, { "🕦" }, { "🕦" }, { "🕧" }, { "🕧" },
	{ "♀️" }, { "♂️" }, { "⚧" }, { "⚕️" }, { "🇿" }, { "🇾" }, { "🇽" }, { "🇼" }, { "🇻" }, { "🇺" }, { "🇹" }, { "🇸" }, { "🇷" }, { "🇶" }, { "🇵" }, { "🇴" }, { "🇳" }, { "🇲" }, { "🇱" },
	{ "🇰" }, { "🇯" }, { "🇮" }, { "🇭" }, { "🇬" }, { "🇫" }, { "🇪" }, { "🇩" }, { "🇨" }, { "🇧" }, { "🇦" }, { "🚗" }, { "🚗" }, { "🚕" }, { "🚙" }, { "🛻" }, { "🚐" }, { "🚌" },
	{ "🚎" }, { "🏎️" }, { "🏎️" }, { "🚓" }, { "🚑" }, { "🚒" }, { "🚚" }, { "🚛" }, { "🚜" }, { "🦯" }, { "🦽" }, { "🦼" }, { "🩼" }, { "🛴" }, { "🛴" }, { "🚲" }, { "🚲" },
	{ "🛵" }, { "🛵" }, { "🏍️" }, { "🏍️" }, { "🛺" }, { "🛞" }, { "🚨" }, { "🚔" }, { "🚍" }, { "🚘" }, { "🚖" }, { "🚡" }, { "🚠" }, { "🚟" }, { "🚃" }, { "🚋" }, { "🚋" },
	{ "🚞" }, { "🚝" }, { "🚄" }, { "🚅" }, { "🚅" }, { "🚈" }, { "🚂" }, { "🚂" }, { "🚆" }, { "🚇" }, { "🚊" }, { "🚉" }, { "✈️" }, { "🛫" }, { "🛬" }, { "🛩️" }, { "🛩️" }, { "💺" },
	{ "🛰️" }, { "🚀" }, { "🛸" }, { "🚁" }, { "🛶" }, { "🛶" }, { "⛵" }, { "🚤" }, { "🛥️" }, { "🛥️" }, { "🛳️" }, { "🛳️" }, { "⛴️" }, { "🚢" }, { "🛟" }, { "⚓" }, { "🪝" }, { "⛽" },
	{ "⛽" }, { "🚧" }, { "🚦" }, { "🚥" }, { "🚏" }, { "🚏" }, { "🗺️" }, { "🗺️" }, { "🗿" }, { "🗿" }, { "🗽" }, { "🗼" }, { "🏰" }, { "🏰" }, { "🏯" }, { "🏟️" }, { "🎡" },
	{ "🎢" }, { "🎠" }, { "⛲" }, { "⛱️" }, { "⛱️" }, { "🏖️" }, { "🏖️" }, { "🏝️" }, { "🏝️" }, { "🏜️" }, { "🌋" }, { "⛰️" }, { "🏔️" }, { "🏔️" }, { "🗻" }, { "🏕️" }, { "⛺" }, { "🏠" },
	{ "🏡" }, { "🏘️" }, { "🏘️" }, { "🏘️" }, { "🏚️" }, { "🏚️" }, { "🛖" }, { "🏗️" }, { "🏗️" }, { "🏭" }, { "🏢" }, { "🏬" }, { "🏣" }, { "🏤" }, { "🏥" }, { "🏦" }, { "🏨" },
	{ "🏪" }, { "🏫" }, { "🏩" }, { "💒" }, { "🏛️" }, { "⛪" }, { "🕌" }, { "🕍" }, { "🛕" }, { "🕋" }, { "⛩️" }, { "🛤️" }, { "🛤️" }, { "🛣️" }, { "🗾" }, { "🗾" }, { "🎑" }, { "🏞️" },
	{ "🏞️" }, { "🌅" }, { "🌄" }, { "🌠" }, { "🌠" }, { "🎇" }, { "🎆" }, { "🌇" }, { "🌇" }, { "🌇" }, { "🌆" }, { "🏙️" }, { "🌃" }, { "🌌" }, { "🌉" }, { "🌁" } };

namespace bnch_swt {

	struct test_struct {
		std::vector<std::string> testVals01{};
		std::vector<uint64_t> testVals02{};
		std::vector<int64_t> testVals03{};
		std::vector<double> testVals04{};
		std::vector<bool> testVals05{};

		bool operator==(const test_struct& other) const {
			if (testVals01 != other.testVals01) {
				if (testVals01.size() != other.testVals01.size()) {
					std::cout << "LEFT SIZE-(testVals01): " << testVals01.size() << ", RIGHT SIZE: " << other.testVals01.size() << std::endl;
					return false;
				}
				for (size_t x = 0; x < testVals01.size(); ++x) {
					if (testVals01[x] != other.testVals01[x]) {
						std::cout << "LEFT VALUE-(testVals01): " << testVals01[x] << ", RIGHT VALUE: " << other.testVals01[x] << std::endl;
					}
				}
				return false;
			}
			if (testVals02 != other.testVals02) {
				if (testVals02.size() != other.testVals02.size()) {
					std::cout << "LEFT SIZE-(testVals02): " << testVals02.size() << ", RIGHT SIZE: " << other.testVals02.size() << std::endl;
					return false;
				}
				for (size_t x = 0; x < testVals02.size(); ++x) {
					if (testVals02[x] != other.testVals02[x]) {
						std::cout << "LEFT VALUE-(testVals02): " << testVals02[x] << ", RIGHT VALUE: " << other.testVals02[x] << std::endl;
					}
				}
				return false;
			}
			if (testVals03 != other.testVals03) {
				if (testVals03.size() != other.testVals03.size()) {
					std::cout << "LEFT SIZE-(testVals03): " << testVals03.size() << ", RIGHT SIZE: " << other.testVals03.size() << std::endl;
					return false;
				}
				for (size_t x = 0; x < testVals03.size(); ++x) {
					if (testVals03[x] != other.testVals03[x]) {
						std::cout << "LEFT VALUE-(testVals03): " << testVals03[x] << ", RIGHT VALUE: " << other.testVals03[x] << std::endl;
					}
				}
				return false;
			}
			if (testVals04 != other.testVals04) {
				if (testVals04.size() != other.testVals04.size()) {
					std::cout << "LEFT SIZE-(testVals04): " << testVals04.size() << ", RIGHT SIZE: " << other.testVals04.size() << std::endl;
					return false;
				}
				for (size_t x = 0; x < testVals04.size(); ++x) {
					if (testVals04[x] != other.testVals04[x]) {
						std::cout << "LEFT VALUE-(testVals04): " << testVals04[x] << ", RIGHT VALUE: " << other.testVals04[x] << std::endl;
					}
				}
				return false;
			}
			if (testVals05 != other.testVals05) {
				if (testVals05.size() != other.testVals05.size()) {
					std::cout << "LEFT SIZE-(testVals05): " << testVals05.size() << ", RIGHT SIZE: " << other.testVals05.size() << std::endl;
					return false;
				}
				for (size_t x = 0; x < testVals05.size(); ++x) {
					if (testVals05[x] != other.testVals05[x]) {
						std::cout << "LEFT VALUE-(testVals05): " << testVals05[x] << ", RIGHT VALUE: " << other.testVals05[x] << std::endl;
					}
				}
				return false;
			}
			return true;
		}
	};

	template<typename value_type> struct test {
		std::vector<value_type> a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;

		bool operator==(const test<value_type>& other) const {
			if (a != other.a) {
				return false;
			}
			if (b != other.b) {
				return false;
			}
			if (c != other.c) {
				return false;
			}
			if (d != other.d) {
				return false;
			}
			if (e != other.e) {
				return false;
			}
			if (f != other.f) {
				return false;
			}
			if (g != other.g) {
				return false;
			}
			if (h != other.h) {
				return false;
			}
			if (i != other.i) {
				return false;
			}
			if (j != other.j) {
				return false;
			}
			if (k != other.k) {
				return false;
			}
			if (l != other.l) {
				return false;
			}
			if (m != other.m) {
				return false;
			}
			if (n != other.n) {
				return false;
			}
			if (o != other.o) {
				return false;
			}
			if (p != other.p) {
				return false;
			}
			if (q != other.q) {
				return false;
			}
			if (r != other.r) {
				return false;
			}
			if (s != other.s) {
				return false;
			}
			if (t != other.t) {
				return false;
			}
			if (u != other.u) {
				return false;
			}
			if (v != other.v) {
				return false;
			}
			if (w != other.w) {
				return false;
			}
			if (x != other.x) {
				return false;
			}
			if (y != other.y) {
				return false;
			}
			if (z != other.z) {
				return false;
			}
			return true;
		}
	};	

	struct random_generator;

	struct test_generator {
		static test<test_struct> generateTest();
	};

	template<typename value_type>
	concept test_type = std::is_same_v<test<test_struct>, value_type>;

	inline static std::random_device randomEngine{};
	inline static std::mt19937_64 gen{ randomEngine() };
	static constexpr std::string_view charset{ "!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~" };

	struct random_generator {
		inline static std::uniform_real_distribution<double> disDouble{ log(std::numeric_limits<double>::min()), log(std::numeric_limits<double>::max()) };
		inline static std::uniform_int_distribution<int64_t> disInt{ std::numeric_limits<int64_t>::min(), std::numeric_limits<int64_t>::max() };
		inline static std::uniform_int_distribution<uint64_t> disUint{ std::numeric_limits<uint64_t>::min(), std::numeric_limits<uint64_t>::max() };
		inline static std::uniform_int_distribution<uint64_t> disCharSet{ 0ull, charset.size() - 1 };
		inline static std::uniform_int_distribution<uint64_t> disString{ 16ull, 128ull };
		inline static std::uniform_int_distribution<uint64_t> disUnicodeEmoji{ 0ull, std::size(unicodeEmoji) - 1 };
		inline static std::uniform_int_distribution<uint64_t> disBool{ 0, 100 };
		inline static std::random_device randomEngine{};
		inline static std::mt19937_64 gen{ randomEngine() };

		template<jsonifier::concepts::integer_t value_type01, jsonifier::concepts::integer_t value_type02>
		static value_type01 randomizeNumberUniform(value_type01 start, value_type02 end) {
			std::uniform_int_distribution<value_type01> dis{ start, static_cast<value_type01>(end) };
			return dis(gen);
		}

		static void insertUnicodeInJSON(std::string& jsonString) {
			auto newStringView = unicodeEmoji[disUnicodeEmoji(gen)];
			jsonString += static_cast<std::string>(newStringView);
		}

		template<jsonifier::concepts::string_t value_type> static value_type generateValue(size_t length = 0) {
			if (length == 0) {
				length = disString(gen);
			}
			auto unicodeCount = length / 16ull;
			std::vector<uint64_t> unicodeIndices{};
			static constexpr auto checkForPresenceOfIndex = [](auto& indices, auto index, auto length, auto&& checkForPresenceOfIndexNew) -> void {
				if (std::find(indices.begin(), indices.end(), index) != indices.end()) {
					index = randomizeNumberUniform(0ull, length);
					checkForPresenceOfIndexNew(indices, index, length, checkForPresenceOfIndexNew);
				} else {
					indices.emplace_back(index);
				}
			};
			for (uint64_t x = 0; x < unicodeCount; ++x) {
				auto newValue = randomizeNumberUniform(0ull, length);
				checkForPresenceOfIndex(unicodeIndices, newValue, length, checkForPresenceOfIndex);
			}
			std::sort(unicodeIndices.begin(), unicodeIndices.end(), std::less<uint64_t>{});

			std::string result{};
			uint64_t insertedUnicode = 0;
			auto iter				 = unicodeIndices.begin();
			for (uint64_t x = 0; x < length; ++x) {
				if (iter < unicodeIndices.end() && x == *iter) [[unlikely]] {
					insertUnicodeInJSON(result);
					insertedUnicode++;
					++iter;
				} else {
					result += charset[disCharSet(gen)];
				}
			}

			return result;
		}

		template<bnch_swt::internal::floating_point_t value_type> static value_type generateValue(uint64_t = 0) {
			double logValue = std::exp(disDouble(gen));
			return generateValue<bool>() ? -logValue : logValue;
		}

		template<jsonifier::concepts::vector_t value_type> static value_type generateValue(uint64_t count = 0) {
			value_type returnValues{};
			for (size_t x = 0; x < count; ++x) {
				returnValues.emplace_back(generateValue<typename value_type::value_type>());
			}
			return returnValues;
		}

		template<test_type value_type> static value_type generateValue(uint64_t = 0) {
			return test_generator::generateTest();
		}

		template<bnch_swt::internal::bool_t value_type> static value_type generateValue(uint64_t = 0) {
			return static_cast<bool>(disBool(gen) >= 50);
		}

		template<bnch_swt::internal::integer_t value_type>
			requires(std::is_unsigned_v<value_type>)
		static value_type generateValue(uint64_t = 0) {
			return disUint(gen);
		}

		template<bnch_swt::internal::integer_t value_type>
			requires(std::is_signed_v<value_type>)
		static value_type generateValue(uint64_t = 0) {
			return disInt(gen);
		}
	};

	test<test_struct> test_generator::generateTest() {
		test<test_struct> returnValues{};
		auto fill = [&](auto& v) {
			auto arraySize01 = random_generator::randomizeNumberUniform(1ull, 3ull);
			v.resize(arraySize01);
			for (uint64_t x = 0; x < arraySize01; ++x) {
				auto arraySize03 = 0ull;//= random_generator::randomizeNumberUniform(0ull, 15ull);
				for (uint64_t y = 0; y < arraySize03; ++y) {
					v[x].testVals01.emplace_back(random_generator::template generateValue<std::string>(arraySize03));
				}
				//arraySize03 = random_generator::randomizeNumberUniform(0ull, 15ull);
				for (uint64_t y = 0; y < arraySize03; ++y) {
					v[x].testVals02.emplace_back(random_generator::template generateValue<uint64_t>());
				}
				//arraySize03 = random_generator::randomizeNumberUniform(0ull, 15ull);
				for (uint64_t y = 0; y < arraySize03; ++y) {
					v[x].testVals03.emplace_back(random_generator::template generateValue<int64_t>());
				}
				//arraySize03 = random_generator::randomizeNumberUniform(0ull, 15ull);
				for (uint64_t y = 0; y < arraySize03; ++y) {
					v[x].testVals04.emplace_back(random_generator::template generateValue<double>());
				}
				//arraySize03 = random_generator::randomizeNumberUniform(0ull, 15ull);
				for (uint64_t y = 0; y < arraySize03; ++y) {
					v[x].testVals05.emplace_back(random_generator::template generateValue<bool>());
				}
			}
		};

		fill(returnValues.a);
		fill(returnValues.b);
		fill(returnValues.c);
		fill(returnValues.d);
		fill(returnValues.e);
		fill(returnValues.f);
		fill(returnValues.g);
		fill(returnValues.h);
		fill(returnValues.i);
		fill(returnValues.j);
		fill(returnValues.k);
		fill(returnValues.l);
		fill(returnValues.m);
		fill(returnValues.n);
		fill(returnValues.o);
		fill(returnValues.p);
		fill(returnValues.q);
		fill(returnValues.r);
		fill(returnValues.s);
		fill(returnValues.t);
		fill(returnValues.u);
		fill(returnValues.v);
		fill(returnValues.w);
		fill(returnValues.x);
		fill(returnValues.y);
		fill(returnValues.z);
		return returnValues;
	}
}

template<> struct jsonifier::core<bnch_swt::test_struct> {
	using value_type				 = bnch_swt::test_struct;
	static constexpr auto parseValue = createValue<&value_type::testVals01, &value_type::testVals02, &value_type::testVals03, &value_type::testVals04, &value_type::testVals05>();
};

template<typename value_type_new> struct jsonifier::core<bnch_swt::test<value_type_new>> {
	using value_type				 = bnch_swt::test<value_type_new>;
	static constexpr auto parseValue = createValue<&value_type::a, &value_type::b, &value_type::c, &value_type::d, &value_type::e, &value_type::f, &value_type::g, &value_type::h,
		&value_type::i, &value_type::j, &value_type::k, &value_type::l, &value_type::m, &value_type::n, &value_type::o, &value_type::p, &value_type::q, &value_type::r,
		&value_type::s, &value_type::t, &value_type::u, &value_type::v, &value_type::w, &value_type::x, &value_type::y, &value_type::z>();
};

template<> struct glz::meta<bnch_swt::test_struct> {
	using value_type				 = bnch_swt::test_struct;
	static constexpr auto value = object(&value_type::testVals01, &value_type::testVals02, &value_type::testVals03, &value_type::testVals04, &value_type::testVals05);
};

template<typename value_type_new> struct glz::meta<bnch_swt::test<value_type_new>> {
	using value_type				 = bnch_swt::test<value_type_new>;
	static constexpr auto value = object(&value_type::a, &value_type::b, &value_type::c, &value_type::d, &value_type::e, &value_type::f, &value_type::g, &value_type::h,
		&value_type::i, &value_type::j, &value_type::k, &value_type::l, &value_type::m, &value_type::n, &value_type::o, &value_type::p, &value_type::q, &value_type::r,
		&value_type::s, &value_type::t, &value_type::u, &value_type::v, &value_type::w, &value_type::x, &value_type::y, &value_type::z);
};